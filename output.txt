Mon May 27 23:43:22 PDT 2024
Linux csslab7 4.18.0-513.18.1.el8_9.x86_64 #1 SMP Wed Feb 21 21:34:36 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1158009(amyv16) gid=2121158009(amyv16) groups=2121158009(amyv16),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Invalid movie type encountered: Z
Invalid movie type encountered: Z
movie input complete! 
customer input complete! 
Movie does not exist, or is out of stock!
Movie does not exist, or is out of stock!
Movie does not exist, or is out of stock!
Invalid command encountered: Z
command input complete! 
Done.
=====================================================
3. clang-tidy warnings are fixed
=====================================================
40516 warnings generated.
81013 warnings generated.
104437 warnings generated.
135544 warnings generated.
176044 warnings generated.
210528 warnings generated.
239708 warnings generated.
290957 warnings generated.
337151 warnings generated.
360547 warnings generated.
401390 warnings generated.
451445 warnings generated.
495238 warnings generated.
536588 warnings generated.
582142 warnings generated.
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:2:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:4:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:6:16: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Classics::operator<(const Classics &other) const {
               ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:7:46: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  if (this->releaseYear < other.releaseYear) {
                                             ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:9:4: note: end of the original
  } else if ((this->releaseYear == other.releaseYear) &&
   ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:10:57: note: clone 1 starts here
             (this->releaseMonth < other.releaseMonth)) {
                                                        ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:14:53: note: clone 2 starts here
             (this->majorActor < other.majorActor)) {
                                                    ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:9:5: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  } else if ((this->releaseYear == other.releaseYear) &&
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:14:32: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
             (this->majorActor < other.majorActor)) {
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:21:16: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Classics::operator>(const Classics &other) const {
               ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:22:46: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  if (this->releaseYear > other.releaseYear) {
                                             ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:24:4: note: end of the original
  } else if ((this->releaseYear == other.releaseYear) &&
   ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:25:57: note: clone 1 starts here
             (this->releaseMonth > other.releaseMonth)) {
                                                        ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:29:53: note: clone 2 starts here
             (this->majorActor > other.majorActor)) {
                                                    ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:24:5: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  } else if ((this->releaseYear == other.releaseYear) &&
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:29:32: error: 'operator><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
             (this->majorActor > other.majorActor)) {
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3858:5: note: resolves to this declaration
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:36:16: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Classics::operator==(const Classics &other) const {
               ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:39:25: error: 'operator><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      (this->majorActor > other.majorActor)) {
                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3858:5: note: resolves to this declaration
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:40:12: error: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr,-warnings-as-errors]
    return true;
~~~~~~~~~~~^~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.cpp:41:5: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  } else {
    ^~~~
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/classics.h:20:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/classics.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:24:7: error: destructor of 'Classics' is public and non-virtual [cppcoreguidelines-virtual-class-destructor,-warnings-as-errors]
class Classics : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/classics.h:24:7: note: make it public and virtual
class Classics : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/classics.h:27:56: error: 2 adjacent parameters of 'Classics' of similar type ('string') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
  Classics(char mediaType, int stock, string director, string title,
                                                       ^~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:27:63: note: the first parameter in the range is 'title'
  Classics(char mediaType, int stock, string director, string title,
                                                              ^~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:28:19: note: the last parameter in the range is 'majorActor'
           string majorActor, int releaseYear, int releaseMonth)
                  ^~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:28:31: error: 2 adjacent parameters of 'Classics' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
           string majorActor, int releaseYear, int releaseMonth)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:28:35: note: the first parameter in the range is 'releaseYear'
           string majorActor, int releaseYear, int releaseMonth)
                                  ^~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:28:52: note: the last parameter in the range is 'releaseMonth'
           string majorActor, int releaseYear, int releaseMonth)
                                                   ^~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:29:33: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear) {
                                ^
                                std::move( )
/home/NETID/amyv16/ass4-movie-starter/classics.h:29:43: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear) {
                                          ^
                                          std::move( )
/home/NETID/amyv16/ass4-movie-starter/classics.h:30:5: error: 'majorActor' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
    this->majorActor = majorActor;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:30:22: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    this->majorActor = majorActor;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:800:7: note: resolves to this declaration
      operator=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/classics.h:30:24: error: parameter 'majorActor' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    this->majorActor = majorActor;
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/classics.h:31:5: error: 'releaseMonth' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
    this->releaseMonth = releaseMonth;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/classics.h:35:34: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator<(const Classics &) const;
                                 ^
                                  /*other*/
/home/NETID/amyv16/ass4-movie-starter/classics.h:36:34: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator>(const Classics &) const;
                                 ^
                                  /*other*/
/home/NETID/amyv16/ass4-movie-starter/classics.h:37:35: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator==(const Classics &) const;
                                  ^
                                   /*other*/
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:2:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:3:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:5:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:7:14: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Comedy::operator<(const Comedy &other) const
             ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:9:19: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (this->title < other.title)
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:10:3: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:12:4: note: end of the original
  }
   ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:14:3: note: clone 1 starts here
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:13:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else if ((this->title == other.title) && (this->releaseYear < other.releaseYear))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:13:25: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->title == other.title) && (this->releaseYear < other.releaseYear))
                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:23:14: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Comedy::operator>(const Comedy &other) const
             ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:25:19: error: 'operator><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (this->title > other.title)
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3858:5: note: resolves to this declaration
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:26:3: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:28:4: note: end of the original
  }
   ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:30:3: note: clone 1 starts here
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:29:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else if ((this->title == other.title) && (this->releaseYear > other.releaseYear))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:29:25: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->title == other.title) && (this->releaseYear > other.releaseYear))
                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:39:14: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Comedy::operator==(const Comedy &other) const
             ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:41:20: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if ((this->title == other.title) && (this->releaseYear == other.releaseYear))
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:43:12: error: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr,-warnings-as-errors]
    return true;
~~~~~~~~~~~^~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.cpp:45:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else
  ^~~~
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/comedy.h:20:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/comedy.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/comedy.h:24:7: error: destructor of 'Comedy' is public and non-virtual [cppcoreguidelines-virtual-class-destructor,-warnings-as-errors]
class Comedy : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/comedy.h:24:7: note: make it public and virtual
class Comedy : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/comedy.h:28:33: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear){};
                                ^
                                std::move( )
/home/NETID/amyv16/ass4-movie-starter/comedy.h:28:43: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear){};
                                          ^
                                          std::move( )
/home/NETID/amyv16/ass4-movie-starter/comedy.h:31:32: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator<(const Comedy &) const;
                               ^
                                /*other*/
/home/NETID/amyv16/ass4-movie-starter/comedy.h:32:32: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator>(const Comedy &) const;
                               ^
                                /*other*/
/home/NETID/amyv16/ass4-movie-starter/comedy.h:33:33: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator==(const Comedy &) const;
                                ^
                                 /*other*/
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:2:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:11: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Customer::Customer(int id, string firstname, string lastname)
          ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:24: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
Customer::Customer(int id, string firstname, string lastname)
                       ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:28: error: 2 adjacent parameters of 'Customer' of similar type ('string') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
Customer::Customer(int id, string firstname, string lastname)
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:35: note: the first parameter in the range is 'firstname'
Customer::Customer(int id, string firstname, string lastname)
                                  ^~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:53: note: the last parameter in the range is 'lastname'
Customer::Customer(int id, string firstname, string lastname)
                                                    ^~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:28: error: pass by value and use std::move [modernize-pass-by-value,-warnings-as-errors]
Customer::Customer(int id, string firstname, string lastname)
                           ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:5:46: error: pass by value and use std::move [modernize-pass-by-value,-warnings-as-errors]
Customer::Customer(int id, string firstname, string lastname)
                                             ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:6:25: error: parameter 'firstname' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    : ID(id), firstName(firstname), lastName(lastname) {}
                        ^
                        std::move( )
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:6:46: error: parameter 'lastname' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    : ID(id), firstName(firstname), lastName(lastname) {}
                                             ^
                                             std::move( )
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:8:15: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int Customer::getID() const { return ID; }
              ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:10:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
string Customer::getFirstName() const { return firstName; }
                 ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:12:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
string Customer::getLastName() const { return lastName; }
                 ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:15:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
string Customer::getAllInfo() const {
                 ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:16:18: error: adding 'int' to a string does not append to the string [clang-diagnostic-string-plus-int,-warnings-as-errors]
  return getID() + " " + getFirstName() + " " + getLastName();
         ~~~~~~~~^~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:16:18: note: use array indexing to silence this warning
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:16:24: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  return getID() + " " + getFirstName() + " " + getLastName();
                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3662:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:16:41: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  return getID() + " " + getFirstName() + " " + getLastName();
                                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/customer.cpp:16:47: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  return getID() + " " + getFirstName() + " " + getLastName();
                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/customer.h:16:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/customer.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer.h:20:7: error: constructor does not initialize these fields: ID [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
class Customer {
      ^
/home/NETID/amyv16/ass4-movie-starter/customer.h:23:3: error: constructor does not initialize these fields: ID [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
  Customer() = default;
  ^
/home/NETID/amyv16/ass4-movie-starter/customer.h:24:16: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Customer(int id, string firstname, string lastname);
               ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:2:1: error: #includes are not sorted properly [llvm-include-order,-warnings-as-errors]
#include "hashtable.h"
^        ~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:5:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
CustomerManager::CustomerManager() = default;
                 ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:8:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
CustomerManager::~CustomerManager() {
                 ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:13:23: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool CustomerManager::isValid(int ID) {
                      ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:13:35: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
bool CustomerManager::isValid(int ID) {
                                  ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:15:10: error: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr,-warnings-as-errors]
                return false;
~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:21:27: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Customer CustomerManager::getCustomer(int ID) {
                          ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:21:43: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
Customer CustomerManager::getCustomer(int ID) {
                                          ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:26:23: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool CustomerManager::addCustomer(int id, string firstname, string lastname) {
                      ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:26:39: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
bool CustomerManager::addCustomer(int id, string firstname, string lastname) {
                                      ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:28:3: error: variable 'c' of type 'Customer' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
                Customer c = Customer(id, firstname, lastname);
                ^
                         const 
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:28:12: error: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
                Customer c = Customer(id, firstname, lastname);
                         ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:28:12: error: invalid case style for variable 'c' [readability-identifier-naming,-warnings-as-errors]
                Customer c = Customer(id, firstname, lastname);
                         ^
                         C
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:28:29: error: parameter 'firstname' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
                Customer c = Customer(id, firstname, lastname);
                                          ^
                                          std::move( )
/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp:28:40: error: parameter 'lastname' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
                Customer c = Customer(id, firstname, lastname);
                                                     ^
                                                     std::move( )
/home/NETID/amyv16/ass4-movie-starter/customer_manager.h:17:1: error: system include map not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/customer_manager.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/customer_manager.h:30:20: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  bool isValid(int ID);
                   ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.h:33:28: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Customer getCustomer(int ID);
                           ^
/home/NETID/amyv16/ass4-movie-starter/customer_manager.h:36:24: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  bool addCustomer(int id, string firstname, string lastname);
                       ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:2:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:4:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:6:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Drama::operator<(const Drama &other) const
            ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:8:22: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (this->director < other.director)
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:9:3: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:11:4: note: end of the original
  }
   ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:13:3: note: clone 1 starts here
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:12:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title < other.title))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:12:28: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title < other.title))
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:12:63: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title < other.title))
                                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:22:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Drama::operator>(const Drama &other) const
            ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:24:22: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (this->director < other.director)
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:25:3: error: repeated branch in conditional chain [bugprone-branch-clone,-warnings-as-errors]
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:27:4: note: end of the original
  }
   ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:29:3: note: clone 1 starts here
  {
  ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:28:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title > other.title))
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:28:28: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title > other.title))
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:28:63: error: 'operator><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  else if ((this->director == other.director) && (this->title > other.title))
                                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3858:5: note: resolves to this declaration
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:38:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Drama::operator==(const Drama &other) const
            ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:40:23: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if ((this->director == other.director) && (this->title > other.title))
                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:40:58: error: 'operator><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if ((this->director == other.director) && (this->title > other.title))
                                                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3858:5: note: resolves to this declaration
    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:42:12: error: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr,-warnings-as-errors]
    return true;
~~~~~~~~~~~^~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.cpp:44:3: error: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
  else
  ^~~~
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/drama.h:22:1: error: system include map not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/drama.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.h:23:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/drama.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/drama.h:27:7: error: destructor of 'Drama' is public and non-virtual [cppcoreguidelines-virtual-class-destructor,-warnings-as-errors]
class Drama : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/drama.h:27:7: note: make it public and virtual
class Drama : public Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/drama.h:32:33: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear){};
                                ^
                                std::move( )
/home/NETID/amyv16/ass4-movie-starter/drama.h:32:43: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
      : Movie(mediaType, stock, director, title, releaseYear){};
                                          ^
                                          std::move( )
/home/NETID/amyv16/ass4-movie-starter/drama.h:35:31: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator<(const Drama &) const;
                              ^
                               /*other*/
/home/NETID/amyv16/ass4-movie-starter/drama.h:36:31: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator>(const Drama &) const;
                              ^
                               /*other*/
/home/NETID/amyv16/ass4-movie-starter/drama.h:37:32: error: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter,-warnings-as-errors]
  bool operator==(const Drama &) const;
                               ^
                                /*other*/
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:2:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:5:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
DVD::DVD(int stock)
     ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:7:2: error: 'stock' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
        this->stock = stock;
        ^~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:8:2: error: 'borrowed' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
        borrowed = 0;
        ^~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:11:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
DVD::~DVD(){
     ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:13:1: error: Attempt to delete released memory [clang-analyzer-cplusplus.NewDelete,-warnings-as-errors]
}
^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:12:2: note: Memory is released
        delete this;
        ^~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:13:1: note: Attempt to delete released memory
}
^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:16:11: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool DVD::addTostock(int stk)
          ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:23:11: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool DVD::isInStock() const
          ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:29:11: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool DVD::checkOut()
          ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:37:11: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool DVD::returnMovie()
          ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:44:10: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int DVD::getBorrowed(){
         ^
/home/NETID/amyv16/ass4-movie-starter/dvd.cpp:48:10: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int DVD::getRemained(){
         ^
/home/NETID/amyv16/ass4-movie-starter/dvd.h:19:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/dvd.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/dvd.h:27:3: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  ~DVD();
  ^
         override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:30:3: error: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions,-warnings-as-errors]
  DVD(int stock);
  ^
  explicit 
/home/NETID/amyv16/ass4-movie-starter/dvd.h:33:8: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  bool addTostock(int stk);
       ^
                           override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:36:8: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  bool isInStock() const;
       ^
                         override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:39:8: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  bool checkOut();
       ^
                  override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:42:8: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  bool returnMovie();
       ^
                     override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:45:7: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  int getBorrowed();
      ^
                    override
/home/NETID/amyv16/ass4-movie-starter/dvd.h:48:7: error: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override,-warnings-as-errors]
  int getRemained();
      ^
                    override
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:3:1: error: system include vector not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:6:1: error: constructor does not initialize these fields: table [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
HashTable::HashTable()
^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:6:12: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
HashTable::HashTable()
           ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:8:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (size_t i = 0; i < TABLE_SIZE; i++)
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:8:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (size_t i = 0; i < TABLE_SIZE; i++)
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & i : table)
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:8:15: error: invalid case style for variable 'i' [readability-identifier-naming,-warnings-as-errors]
  for (size_t i = 0; i < TABLE_SIZE; i++)
              ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:16:12: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
HashTable::~HashTable()
           ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:18:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < TABLE_SIZE; ++i)
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & i : table)
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:20:5: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
    CustomerProfile *p = table[i];
    ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:18:12: error: invalid case style for variable 'i' [readability-identifier-naming,-warnings-as-errors]
  for (int i = 0; i < TABLE_SIZE; ++i)
           ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:20:22: error: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    CustomerProfile *p = table[i];
                     ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:20:22: error: invalid case style for variable 'p' [readability-identifier-naming,-warnings-as-errors]
    CustomerProfile *p = table[i];
                     ^
                     P
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:21:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    while (p != nullptr)
    ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:21:12: error: backward branch (while loop) is ID-dependent due to variable reference to 'p' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
    while (p != nullptr)
           ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:23:24: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
      CustomerProfile *temp = p;
                       ^~~~
                       Temp
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:32:16: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int HashTable::hashFunction(int key) { return key % TABLE_SIZE; }
               ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:35:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void HashTable::insert(int id, Customer customer)
                ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:35:28: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
void HashTable::insert(int id, Customer customer)
                           ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:35:41: error: the parameter 'customer' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
void HashTable::insert(int id, Customer customer)
                                        ^
                               const   &
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:37:3: error: variable 'index' of type 'int' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
  int index = hashFunction(id);
  ^
      const 
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:37:7: error: invalid case style for variable 'index' [readability-identifier-naming,-warnings-as-errors]
  int index = hashFunction(id);
      ^~~~~
      Index
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:37:15: error: 'hashFunction' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  int index = hashFunction(id);
              ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:32:16: note: resolves to this declaration
int HashTable::hashFunction(int key) { return key % TABLE_SIZE; }
               ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:42:32: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    table[index]->customerLink = customer;
                               ^
/home/NETID/amyv16/ass4-movie-starter/customer.h:20:7: note: resolves to this declaration
class Customer {
      ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:46:22: error: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    CustomerProfile *p = table[index];
                     ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:46:22: error: invalid case style for variable 'p' [readability-identifier-naming,-warnings-as-errors]
    CustomerProfile *p = table[index];
                     ^
                     P
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:47:5: error: use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
    CustomerProfile *n = new CustomerProfile();
    ^~~~~~~~~~~~~~~
    auto
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:46:5: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
    CustomerProfile *p = table[index];
    ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:47:22: error: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    CustomerProfile *n = new CustomerProfile();
                     ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:47:22: error: invalid case style for variable 'n' [readability-identifier-naming,-warnings-as-errors]
    CustomerProfile *n = new CustomerProfile();
                     ^
                     N
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:48:21: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    n->customerLink = customer;
                    ^
/home/NETID/amyv16/ass4-movie-starter/customer.h:20:7: note: resolves to this declaration
class Customer {
      ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:51:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    while (p->next != nullptr)
    ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:51:12: error: backward branch (while loop) is ID-dependent due to variable reference to 'p' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
    while (p->next != nullptr)
           ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:60:21: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Customer HashTable::get(int key)
                    ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:63:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  CustomerProfile *p = table[index];
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:62:3: error: variable 'index' of type 'int' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
  int index = hashFunction(key);
  ^
      const 
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:62:7: error: invalid case style for variable 'index' [readability-identifier-naming,-warnings-as-errors]
  int index = hashFunction(key);
      ^~~~~
      Index
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:62:15: error: 'hashFunction' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  int index = hashFunction(key);
              ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:32:16: note: resolves to this declaration
int HashTable::hashFunction(int key) { return key % TABLE_SIZE; }
               ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:63:20: error: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  CustomerProfile *p = table[index];
                   ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:63:20: error: invalid case style for variable 'p' [readability-identifier-naming,-warnings-as-errors]
  CustomerProfile *p = table[index];
                   ^
                   P
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:64:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (p != nullptr)
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:64:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'p' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (p != nullptr)
         ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:72:12: error: invalid case style for variable 'nul' [readability-identifier-naming,-warnings-as-errors]
  Customer nul;
           ^~~
           Nul
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:76:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool HashTable::isExist(int key){
                ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:78:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  CustomerProfile *p = table[index];
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:77:3: error: variable 'index' of type 'int' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
  int index = hashFunction(key);
  ^
      const 
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:77:7: error: invalid case style for variable 'index' [readability-identifier-naming,-warnings-as-errors]
  int index = hashFunction(key);
      ^~~~~
      Index
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:77:15: error: 'hashFunction' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  int index = hashFunction(key);
              ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:32:16: note: resolves to this declaration
int HashTable::hashFunction(int key) { return key % TABLE_SIZE; }
               ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:78:20: error: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  CustomerProfile *p = table[index];
                   ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:78:20: error: invalid case style for variable 'p' [readability-identifier-naming,-warnings-as-errors]
  CustomerProfile *p = table[index];
                   ^
                   P
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:79:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (p != nullptr)
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp:79:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'p' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (p != nullptr)
         ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:15:1: error: system include list not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/hashtable.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <list>
^~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:21:10: error: accessing fields in struct 'CustomerProfile' is inefficient due to padding; only needs 84 bytes but is using 88 bytes [altera-struct-pack-align,-warnings-as-errors]
  struct CustomerProfile {
         ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:21:10: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'CustomerProfile'
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:21:10: error: accessing fields in struct 'CustomerProfile' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 128 bytes [altera-struct-pack-align,-warnings-as-errors]
  struct CustomerProfile {
         ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:21:10: note: use "__attribute__((aligned(128)))" to align struct 'CustomerProfile' to 128 bytes
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:22:9: error: member variable 'id' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    int id;
        ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:22:9: error: use default member initializer for 'id' [modernize-use-default-member-init,-warnings-as-errors]
    int id;
        ^
          {0}
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:22:9: error: invalid case style for public member 'id' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:23:14: error: member variable 'customerLink' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    Customer customerLink;
             ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:23:14: error: invalid case style for public member 'customerLink' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:24:22: error: member variable 'next' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    CustomerProfile *next;
                     ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:24:22: error: use default member initializer for 'next' [modernize-use-default-member-init,-warnings-as-errors]
    CustomerProfile *next;
                     ^
                         {nullptr}
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:24:22: error: invalid case style for public member 'next' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:25:32: error: initializer for member 'customerLink' is redundant [readability-redundant-member-init,-warnings-as-errors]
    CustomerProfile() : id(0), customerLink(), next(nullptr){};
                               ^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:28:3: error: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  CustomerProfile *table[TABLE_SIZE];
  ^
/home/NETID/amyv16/ass4-movie-starter/hashtable.h:39:19: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  void insert(int id, Customer customer);
                  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:5:1: error: system include algorithm not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <algorithm>
^~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:6:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:7:1: error: system include map not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:8:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:9:1: error: system include utility not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <utility>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:10:1: error: system include vector not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:12:12: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Inventory::Inventory() {
           ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:13:21: error: 'make_pair<const char (&)[2], std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  inventory_.insert(make_pair("F", std::vector<Movie>()));
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:922:5: note: resolves to this declaration
    make_pair(_T1&& __x, _T2&& __y)
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:14:21: error: 'make_pair<const char (&)[2], std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  inventory_.insert(make_pair("D", std::vector<Movie>()));
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:922:5: note: resolves to this declaration
    make_pair(_T1&& __x, _T2&& __y)
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:15:21: error: 'make_pair<const char (&)[2], std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  inventory_.insert(make_pair("C", std::vector<Movie>()));
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:922:5: note: resolves to this declaration
    make_pair(_T1&& __x, _T2&& __y)
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:18:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Inventory::AddMovie(const std::string &type, Movie movie) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:18:57: error: the parameter 'movie' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
bool Inventory::AddMovie(const std::string &type, Movie movie) {
                                                        ^
                                                  const  &
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:20:29: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find(type) != inventory_.end()) {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:21:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:21:44: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:23:5: error: if with identical then and else branches [bugprone-branch-clone,-warnings-as-errors]
    if (type == "C") {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:25:7: note: else branch starts here
    } else {
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:23:14: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    if (type == "C") {
             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:33:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Inventory::FindMovie(const std::string &type, const std::string &title) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:33:27: error: 2 adjacent parameters of 'FindMovie' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
bool Inventory::FindMovie(const std::string &type, const std::string &title) {
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:33:46: note: the first parameter in the range is 'type'
bool Inventory::FindMovie(const std::string &type, const std::string &title) {
                                             ^~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:33:71: note: the last parameter in the range is 'title'
bool Inventory::FindMovie(const std::string &type, const std::string &title) {
                                                                      ^~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:34:9: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
  auto &inventory = inventory_.find(type)->second;
        ^~~~~~~~~
        Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:34:42: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  auto &inventory = inventory_.find(type)->second;
                                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:35:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (auto temp : inventory) {
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:35:13: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
  for (auto temp : inventory) {
            ^~~~
            Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:35:18: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto temp : inventory) {
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:35:18: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto temp : inventory) {
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:35:18: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto temp : inventory) {
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:36:25: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    if (temp.getTitle() == title) {
                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:43:24: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction Inventory::Borrow(const std::string &type, const std::string &title,
                       ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:43:31: error: 2 adjacent parameters of 'Borrow' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
Transaction Inventory::Borrow(const std::string &type, const std::string &title,
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:43:50: note: the first parameter in the range is 'type'
Transaction Inventory::Borrow(const std::string &type, const std::string &title,
                                                 ^~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:43:75: note: the last parameter in the range is 'title'
Transaction Inventory::Borrow(const std::string &type, const std::string &title,
                                                                          ^~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:44:42: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
                              const int &id) {
                                         ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:46:29: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find(type) != inventory_.end()) {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:47:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:47:44: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:49:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (auto temp : inventory) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:49:15: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    for (auto temp : inventory) {
              ^~~~
              Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:49:20: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:49:20: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:49:20: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:50:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (temp.getTitle() == title) {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:52:9: error: variable 'info' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
        ^
               const 
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:52:16: error: invalid case style for variable 'info' [readability-identifier-naming,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
               ^~~~
               Info
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:52:39: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:52:46: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:52:48: error: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4150:3: note: resolves to this declaration
  to_string(int __val)
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:53:21: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
        Transaction t = Transaction("B", id, type, info);
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:53:21: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
        Transaction t = Transaction("B", id, type, info);
                    ^
                    T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:58:15: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction t = Transaction();
              ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:58:15: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
  Transaction t = Transaction();
              ^
              T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:62:24: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction Inventory::BorrowClassics(const std::string &actor, const int &id) {
                       ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:62:76: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
Transaction Inventory::BorrowClassics(const std::string &actor, const int &id) {
                                                                           ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:64:28: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find("C") != inventory_.end()) {
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:65:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find("C")->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:65:43: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find("C")->second;
                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:68:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (auto temp : inventory) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:68:15: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    for (auto temp : inventory) {
              ^~~~
              Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:68:20: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:68:20: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:68:20: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:69:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (temp.getActor() == actor) {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:9: error: variable 'info' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
        ^
               const 
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:16: error: invalid case style for variable 'info' [readability-identifier-naming,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
               ^~~~
               Info
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:39: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:46: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:64: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:71:71: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:72:23: error: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                      to_string(temp.getYear());
                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4150:3: note: resolves to this declaration
  to_string(int __val)
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:73:21: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
        Transaction t = Transaction("B", id, "C", info);
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:73:21: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
        Transaction t = Transaction("B", id, "C", info);
                    ^
                    T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:78:15: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction t = Transaction();
              ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:78:15: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
  Transaction t = Transaction();
              ^
              T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:82:24: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction Inventory::Return(const std::string &type, const std::string &title,
                       ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:82:31: error: 2 adjacent parameters of 'Return' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
Transaction Inventory::Return(const std::string &type, const std::string &title,
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:82:50: note: the first parameter in the range is 'type'
Transaction Inventory::Return(const std::string &type, const std::string &title,
                                                 ^~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:82:75: note: the last parameter in the range is 'title'
Transaction Inventory::Return(const std::string &type, const std::string &title,
                                                                          ^~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:83:42: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
                              const int &id) {
                                         ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:85:29: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find(type) != inventory_.end()) {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:86:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:86:44: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:89:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (auto temp : inventory) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:89:15: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    for (auto temp : inventory) {
              ^~~~
              Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:89:20: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:89:20: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:89:20: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:90:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (temp.getTitle() == title) {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:92:9: error: variable 'info' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
        ^
               const 
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:92:16: error: invalid case style for variable 'info' [readability-identifier-naming,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
               ^~~~
               Info
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:92:39: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:92:46: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:92:48: error: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + to_string(temp.getYear());
                                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4150:3: note: resolves to this declaration
  to_string(int __val)
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:93:21: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
        Transaction t = Transaction("R", id, type, info);
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:93:21: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
        Transaction t = Transaction("R", id, type, info);
                    ^
                    T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:98:15: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction t = Transaction();
              ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:98:15: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
  Transaction t = Transaction();
              ^
              T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:102:24: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction Inventory::ReturnClassics(const std::string &actor, const int &id) {
                       ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:102:76: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
Transaction Inventory::ReturnClassics(const std::string &actor, const int &id) {
                                                                           ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:104:28: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find("C") != inventory_.end()) {
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:105:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find("C")->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:105:43: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find("C")->second;
                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:107:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (auto temp : inventory) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:107:15: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    for (auto temp : inventory) {
              ^~~~
              Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:107:20: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:107:20: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:107:20: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto temp : inventory) {
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:108:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (temp.getActor() == actor) {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:9: error: variable 'info' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
        ^
               const 
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:16: error: invalid case style for variable 'info' [readability-identifier-naming,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
               ^~~~
               Info
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:39: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:46: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:64: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3676:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:110:71: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
                                                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3639:5: note: resolves to this declaration
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:111:23: error: 'to_string' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                      to_string(temp.getYear());
                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4150:3: note: resolves to this declaration
  to_string(int __val)
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:112:21: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
        Transaction t = Transaction("R", id, "C", info);
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:112:21: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
        Transaction t = Transaction("R", id, "C", info);
                    ^
                    T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:117:15: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction t = Transaction();
              ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:117:15: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
  Transaction t = Transaction();
              ^
              T
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:121:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Inventory::addToStock(const std::string &type, Movie movie,
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:124:29: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (inventory_.find(type) != inventory_.end()) {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:125:11: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
          ^~~~~~~~~
          Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:125:44: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto &inventory = inventory_.find(type)->second;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:281:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:126:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (Movie temp : inventory) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:126:16: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    for (Movie temp : inventory) {
               ^~~~
               Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:126:21: error: 'operator!=<Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (Movie temp : inventory) {
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:126:21: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (Movie temp : inventory) {
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:126:21: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (Movie temp : inventory) {
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:127:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (temp.getTitle() == movie.getTitle()) {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:136:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void Inventory::PrintInventory() const {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:142:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void Inventory::PrintHelper(const std::string &type) const {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:143:3: error: 'auto &inventory' can be declared as 'const auto &inventory' [readability-qualified-auto,-warnings-as-errors]
  auto &inventory = inventory_.find(type)->second;
  ^
  const 
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:143:9: error: invalid case style for variable 'inventory' [readability-identifier-naming,-warnings-as-errors]
  auto &inventory = inventory_.find(type)->second;
        ^~~~~~~~~
        Inventory
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:143:42: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  auto &inventory = inventory_.find(type)->second;
                                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:362:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (auto movie : inventory) {
  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:13: error: loop variable is copied but only used as const reference; consider making it a const reference [performance-for-range-copy,-warnings-as-errors]
  for (auto movie : inventory) {
            ^
       const  &
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:13: error: invalid case style for variable 'movie' [readability-identifier-naming,-warnings-as-errors]
  for (auto movie : inventory) {
            ^~~~~
            Movie
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:19: error: 'operator!=<const Movie *, std::vector<Movie>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto movie : inventory) {
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:19: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto movie : inventory) {
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:144:19: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  for (auto movie : inventory) {
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:145:15: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cout << movie << "\n";
              ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:29:19: note: resolves to this declaration
  friend ostream &operator<<(ostream &out, const Movie &movie);
                  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:145:24: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cout << movie << "\n";
                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:149:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void Inventory::sort(std::vector<Movie *> &v) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:149:17: error: method 'sort' can be made static [readability-convert-member-functions-to-static,-warnings-as-errors]
void Inventory::sort(std::vector<Movie *> &v) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:149:44: error: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
void Inventory::sort(std::vector<Movie *> &v) {
                                           ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:154:10: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
    for (int j = i; j < v.size(); j++) {
         ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:152:12: error: invalid case style for variable 'i' [readability-identifier-naming,-warnings-as-errors]
  for (int i = 0; i < v.size() - 1; i++) {
           ^      ~                 ~
           I      I                 I
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:153:9: error: invalid case style for variable 'index' [readability-identifier-naming,-warnings-as-errors]
    int index = i;
        ^~~~~
        Index
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:154:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:154:14: error: invalid case style for variable 'j' [readability-identifier-naming,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
             ^      ~             ~
             J      J             J
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:154:21: error: backward branch (for loop) is ID-dependent due to variable reference to 'j' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:156:12: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (v[j]->getTitle() < v[index]->getTitle() ||
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:156:28: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (v[j]->getTitle() < v[index]->getTitle() ||
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:156:31: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (v[j]->getTitle() < v[index]->getTitle() ||
                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:157:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() == v[index]->getTitle() &&
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:157:29: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() == v[index]->getTitle() &&
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:157:33: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() == v[index]->getTitle() &&
                                ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:158:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
           v[j]->getYear() < v[index]->getYear())) {
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:158:31: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
           v[j]->getYear() < v[index]->getYear())) {
                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:162:5: error: 'auto temp' can be declared as 'auto *temp' [llvm-qualified-auto,readability-qualified-auto,-warnings-as-errors]
    auto temp = v[i];
    ^~~~~
    auto *
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:162:10: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    auto temp = v[i];
         ^~~~
         Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:162:18: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto temp = v[i];
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:163:6: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[i] = v[index];
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:163:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[i] = v[index];
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:164:6: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[index] = temp;
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:168:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void Inventory::sortClassics(std::vector<Movie *> &v) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:168:17: error: method 'sortClassics' can be made static [readability-convert-member-functions-to-static,-warnings-as-errors]
void Inventory::sortClassics(std::vector<Movie *> &v) {
                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:168:52: error: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
void Inventory::sortClassics(std::vector<Movie *> &v) {
                                                   ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:174:10: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
    for (int j = i; j < v.size(); j++) {
         ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:171:12: error: invalid case style for variable 'i' [readability-identifier-naming,-warnings-as-errors]
  for (int i = 0; i < v.size() - 1; i++) {
           ^      ~                 ~
           I      I                 I
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:172:9: error: invalid case style for variable 'index' [readability-identifier-naming,-warnings-as-errors]
    int index = i;
        ^~~~~
        Index
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:174:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:174:14: error: invalid case style for variable 'j' [readability-identifier-naming,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
             ^      ~             ~
             J      J             J
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:174:21: error: backward branch (for loop) is ID-dependent due to variable reference to 'j' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
    for (int j = i; j < v.size(); j++) {
                    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:175:12: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (v[j]->getYear() < v[index]->getYear() ||
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:175:30: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (v[j]->getYear() < v[index]->getYear() ||
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:176:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() < v[index]->getTitle() &&
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:176:29: error: 'operator<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() < v[index]->getTitle() &&
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3817:5: note: resolves to this declaration
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:176:32: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          (v[j]->getTitle() < v[index]->getTitle() &&
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:177:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
           v[j]->getYear() == v[index]->getYear())) {
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:177:32: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
           v[j]->getYear() == v[index]->getYear())) {
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:181:5: error: 'auto temp' can be declared as 'auto *temp' [llvm-qualified-auto,readability-qualified-auto,-warnings-as-errors]
    auto temp = v[i];
    ^~~~~
    auto *
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:181:10: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
    auto temp = v[i];
         ^~~~
         Temp
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:181:18: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    auto temp = v[i];
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:182:6: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[i] = v[index];
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:182:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[i] = v[index];
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.cpp:183:6: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    v[index] = temp;
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_vector.h:1123:7: note: resolves to this declaration
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:21:1: error: system include map not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/inventory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.h:22:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/inventory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.h:23:1: error: system include utility not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/inventory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <utility>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.h:24:1: error: system include vector not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/inventory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/inventory.h:31:8: error: invalid case style for public method 'AddMovie' [readability-identifier-naming,-warnings-as-errors]
  bool AddMovie(const std::string &type, Movie movie);
       ^~~~~~~~
       addMovie
/home/NETID/amyv16/ass4-movie-starter/inventory.h:33:8: error: invalid case style for public method 'FindMovie' [readability-identifier-naming,-warnings-as-errors]
  bool FindMovie(const std::string &type, const std::string &title);
       ^~~~~~~~~
       findMovie
/home/NETID/amyv16/ass4-movie-starter/inventory.h:36:15: error: invalid case style for public method 'Borrow' [readability-identifier-naming,-warnings-as-errors]
  Transaction Borrow(const std::string &type, const std::string &title,
              ^~~~~~
              borrow
/home/NETID/amyv16/ass4-movie-starter/inventory.h:37:33: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
                     const int &id);
                                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:39:15: error: invalid case style for public method 'BorrowClassics' [readability-identifier-naming,-warnings-as-errors]
  Transaction BorrowClassics(const std::string &actor, const int &id);
              ^~~~~~~~~~~~~~
              borrowClassics
/home/NETID/amyv16/ass4-movie-starter/inventory.h:39:67: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction BorrowClassics(const std::string &actor, const int &id);
                                                                  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:42:15: error: invalid case style for public method 'Return'; cannot be fixed because 'return' would conflict with a keyword [readability-identifier-naming,-warnings-as-errors]
  Transaction Return(const std::string &type, const std::string &title,
              ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:43:33: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
                     const int &id);
                                ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:46:15: error: invalid case style for public method 'ReturnClassics' [readability-identifier-naming,-warnings-as-errors]
  Transaction ReturnClassics(const std::string &actor, const int &id);
              ^~~~~~~~~~~~~~
              returnClassics
/home/NETID/amyv16/ass4-movie-starter/inventory.h:46:67: error: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction ReturnClassics(const std::string &actor, const int &id);
                                                                  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:52:8: error: invalid case style for public method 'PrintInventory' [readability-identifier-naming,-warnings-as-errors]
  void PrintInventory() const;
       ^~~~~~~~~~~~~~
       printInventory
/home/NETID/amyv16/ass4-movie-starter/inventory.h:54:35: error: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  void sort(std::vector<Movie *> &v);
                                  ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:56:43: error: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  void sortClassics(std::vector<Movie *> &v);
                                          ^
/home/NETID/amyv16/ass4-movie-starter/inventory.h:62:8: error: invalid case style for private method 'PrintHelper' [readability-identifier-naming,-warnings-as-errors]
  void PrintHelper(const std::string &type) const;  // print helper
       ^~~~~~~~~~~
       printHelper
/home/NETID/amyv16/ass4-movie-starter/main.cpp:2:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/main.cpp:3:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/main.cpp:5:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:7:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void test1()
     ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:9:14: error: invalid case style for variable 'test' [readability-identifier-naming,-warnings-as-errors]
  MovieStore test = MovieStore();
             ^~~~
             Test
/home/NETID/amyv16/ass4-movie-starter/main.cpp:11:13: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "movie input complete! " << endl;
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:11:41: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "movie input complete! " << endl;
                                        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:11:44: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "movie input complete! " << endl;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:13:13: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "customer input complete! " << endl;
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:13:44: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "customer input complete! " << endl;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:13:47: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "customer input complete! " << endl;
                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:15:13: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "command input complete! " << endl;
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:15:43: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "command input complete! " << endl;
                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:15:46: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  std::cout << "command input complete! " << endl;
                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:18:5: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int main()
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:20:3: error: 'test1' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  test1();
  ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:7:6: note: resolves to this declaration
void test1()
     ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:21:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Done." << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:21:19: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Done." << endl;
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/main.cpp:21:22: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Done." << endl;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:2:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/media.cpp:4:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:6:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Media::addTostock(int stk)
            ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:11:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Media::isInStock() const
            ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:15:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Media::checkOut()
            ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:22:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Media::returnMovie()
            ^
/home/NETID/amyv16/ass4-movie-starter/media.h:18:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/media.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/media.h:22:7: error: constructor does not initialize these fields: stock, borrowed [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
class Media {
      ^
/home/NETID/amyv16/ass4-movie-starter/media.h:28:16: error: function 'Media::addTostock' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name,-warnings-as-errors]
  virtual bool addTostock(int stock) = 0;
               ^
/home/NETID/amyv16/ass4-movie-starter/media.cpp:6:13: note: the definition seen here
bool Media::addTostock(int stk)
            ^
/home/NETID/amyv16/ass4-movie-starter/media.h:28:16: note: differing parameters are named here: ('stock'), in definition: ('stk')
  virtual bool addTostock(int stock) = 0;
               ^              ~~~~~
                              stk
/home/NETID/amyv16/ass4-movie-starter/mediaFactory.h:18:1: error: system include iostream not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/mediaFactory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/mediaFactory.h:19:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/mediaFactory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/mediaFactory.h:27:10: error: invalid case style for variable 'dvd' [readability-identifier-naming,-warnings-as-errors]
    DVD *dvd = new DVD(stock);
         ^~~
         Dvd
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:2:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:3:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:5:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:7:10: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
ostream &operator<<(ostream &out, const Movie &movie) {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:7: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:22: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:29: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:47: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:54: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
      operator<<(int __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:9:75: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
                                                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:10:7: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      << movie.allStock.begin()->second->getRemained();
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
      operator<<(int __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:10:32: error: 'operator->' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      << movie.allStock.begin()->second->getRemained();
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:362:7: note: resolves to this declaration
      operator->() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:14:1: error: constructor does not initialize these fields: releaseMonth [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
Movie::Movie(char mediaType, int stock, string director, string title,
^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:14:8: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Movie::Movie(char mediaType, int stock, string director, string title,
       ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:16:3: error: 'director' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  this->director = director;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:16:18: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  this->director = director;
                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:800:7: note: resolves to this declaration
      operator=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:16:20: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
  this->director = director;
                   ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:17:3: error: 'title' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  this->title = title;
  ^~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:17:15: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  this->title = title;
              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:800:7: note: resolves to this declaration
      operator=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:17:17: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
  this->title = title;
                ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:18:3: error: 'releaseYear' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  this->releaseYear = releaseYear;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:21:32: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (allStock.find(mediaType) != allStock.end()) {
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:22:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    allStock[mediaType]->addTostock(stock);
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:25:12: error: invalid case style for variable 'newDVD' [readability-identifier-naming,-warnings-as-errors]
    Media *newDVD = MediaFactory::createDVD(stock);
           ^~~~~~
           NewDvd
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:25:21: error: 'createDVD' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    Media *newDVD = MediaFactory::createDVD(stock);
                    ^
/home/NETID/amyv16/ass4-movie-starter/mediaFactory.h:26:15: note: resolves to this declaration
  static DVD *createDVD(int stock) {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:26:21: error: 'make_pair<char &, Media *&>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    allStock.insert(make_pair(mediaType, newDVD));
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:922:5: note: resolves to this declaration
    make_pair(_T1&& __x, _T2&& __y)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:30:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Movie::addTostock(char mediaType, int stock) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:32:32: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (allStock.find(mediaType) != allStock.end()) {
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:33:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    allStock[mediaType]->addTostock(stock);
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:38:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Movie::isInStock(char mediaType) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:39:7: error: implicit conversion 'size_type' (aka 'unsigned long') -> bool [readability-implicit-bool-conversion,-warnings-as-errors]
  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
      ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:39:44: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:40:12: error: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr,-warnings-as-errors]
    return true;
~~~~~~~~~~~^~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:46:15: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
string Movie::getTitle() { return this->title; }
              ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:48:12: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int Movie::getYear() { return this->releaseYear; }
           ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:50:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Movie::checkOut(char mediaType) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:52:7: error: implicit conversion 'size_type' (aka 'unsigned long') -> bool [readability-implicit-bool-conversion,-warnings-as-errors]
  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
      ^
      (                         != 0u)
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:52:44: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:53:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    allStock[mediaType]->checkOut();
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:60:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool Movie::returnMovie(char mediaType) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:62:7: error: implicit conversion 'size_type' (aka 'unsigned long') -> bool [readability-implicit-bool-conversion,-warnings-as-errors]
  if (allStock.count(mediaType)) {
      ^
                                != 0u
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:63:13: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    allStock[mediaType]->returnMovie();
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.cpp:70:15: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
string Movie::getActor() { return actor; }
              ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:20:1: error: system include iostream not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/movie.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.h:21:1: error: system include map not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/movie.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.h:22:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/movie.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie.h:26:7: error: destructor of 'Movie' is public and non-virtual [cppcoreguidelines-virtual-class-destructor,-warnings-as-errors]
class Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:26:7: note: make it public and virtual
class Movie {
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:57:10: error: member variable 'director' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  string director; 
         ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:58:10: error: member variable 'title' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  string title;
         ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:59:10: error: member variable 'actor' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  string actor;
         ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:60:7: error: member variable 'releaseYear' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  int releaseYear;
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:61:7: error: member variable 'releaseMonth' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  int releaseMonth;
      ^
/home/NETID/amyv16/ass4-movie-starter/movie.h:62:22: error: member variable 'allStock' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes,-warnings-as-errors]
  map<char, Media *> allStock; 
                     ^
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:17:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/movieFactory.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:26:37: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Comedy(mediaType, stock, director, title, releaseYear);
                                    ^
                                    std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:26:47: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Comedy(mediaType, stock, director, title, releaseYear);
                                              ^
                                              std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:32:36: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Drama(mediaType, stock, director, title, releaseYear);
                                   ^
                                   std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:32:46: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Drama(mediaType, stock, director, title, releaseYear);
                                             ^
                                             std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:39:12: error: slicing object from type 'Classics' to 'Movie' discards 36 bytes of state [cppcoreguidelines-slicing,-warnings-as-errors]
    return Classics(mediaType, stock, director, title, majorActor, releaseYear,
           ^
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:39:39: error: parameter 'director' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Classics(mediaType, stock, director, title, majorActor, releaseYear,
                                      ^
                                      std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:39:49: error: parameter 'title' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Classics(mediaType, stock, director, title, majorActor, releaseYear,
                                                ^
                                                std::move( )
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:39:56: error: parameter 'majorActor' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    return Classics(mediaType, stock, director, title, majorActor, releaseYear,
                                                       ^
                                                       std::move()
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:4:1: error: system include fstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <fstream>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:5:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:6:1: error: system include sstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <sstream>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:7:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:8:1: error: system include vector not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:10:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:12:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
MovieStore::MovieStore() {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:14:3: error: 'inventory' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  inventory = new Inventory();
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:15:3: error: 'customerManager' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  customerManager = new CustomerManager();
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:16:3: error: 'transactionManager' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  transactionManager = new TransactionManager();
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:19:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void MovieStore::readMovie(string filename) {
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:20:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  ifstream file(filename);
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:19:35: error: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
void MovieStore::readMovie(string filename) {
                                  ^
                           const &
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:20:12: error: invalid case style for variable 'file' [readability-identifier-naming,-warnings-as-errors]
  ifstream file(filename);
           ^~~~
           File
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:23:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (!file.eof()) {
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:23:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'file' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (!file.eof()) {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:24:12: error: invalid case style for variable 'line' [readability-identifier-naming,-warnings-as-errors]
    string line;
           ^~~~
           Line
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:25:5: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    getline(file, line);
    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4060:5: note: resolves to this declaration
    getline(basic_istream<_CharT, _Traits>& __is,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:26:18: error: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    stringstream ss(line);
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:26:18: error: invalid case style for variable 'ss' [readability-identifier-naming,-warnings-as-errors]
    stringstream ss(line);
                 ^~
                 Ss
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:27:5: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    getline(ss, line, ',');
    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:28:5: error: variable 'type' of type 'char' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
    char type = line[0];
    ^
         const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:28:10: error: invalid case style for variable 'type' [readability-identifier-naming,-warnings-as-errors]
    char type = line[0];
         ^~~~
         Type
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:28:21: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    char type = line[0];
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:1242:7: note: resolves to this declaration
      operator[](size_type __pos)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:32:7: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
      string director, title;
      ^~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:32:14: error: invalid case style for variable 'director' [readability-identifier-naming,-warnings-as-errors]
      string director, title;
             ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:32:24: error: invalid case style for variable 'title' [readability-identifier-naming,-warnings-as-errors]
      string director, title;
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:33:7: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
      int stock, year;
      ^~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:33:11: error: variable 'stock' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int stock, year;
          ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:33:11: error: invalid case style for variable 'stock' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:33:18: error: variable 'year' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int stock, year;
                 ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:33:18: error: invalid case style for variable 'year' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:35:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> stock;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:37:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, director, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:38:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, title, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:39:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> year;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:40:7: error: variable 'movie' of type 'Movie' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      Movie movie =
      ^
            const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:40:13: error: invalid case style for variable 'movie' [readability-identifier-naming,-warnings-as-errors]
      Movie movie =
            ^~~~~
            Movie
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:41:11: error: 'createComedy' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          MovieFactory::createComedy(MEDIA_TYPE, stock, director, title, year);
          ^
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:24:16: note: resolves to this declaration
  static Movie createComedy(char mediaType, int stock, string director,
               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:46:7: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
      string director, title;
      ^~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:46:14: error: invalid case style for variable 'director' [readability-identifier-naming,-warnings-as-errors]
      string director, title;
             ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:46:24: error: invalid case style for variable 'title' [readability-identifier-naming,-warnings-as-errors]
      string director, title;
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:47:7: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
      int stock, year;
      ^~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:47:11: error: variable 'stock' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int stock, year;
          ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:47:11: error: invalid case style for variable 'stock' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:47:18: error: variable 'year' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int stock, year;
                 ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:47:18: error: invalid case style for variable 'year' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:49:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> stock;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:51:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, director, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:52:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, title, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:53:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> year;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:54:7: error: variable 'movie' of type 'Movie' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      Movie movie =
      ^
            const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:54:13: error: invalid case style for variable 'movie' [readability-identifier-naming,-warnings-as-errors]
      Movie movie =
            ^~~~~
            Movie
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:55:11: error: 'createDrama' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          MovieFactory::createDrama(MEDIA_TYPE, stock, director, title, year);
          ^
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:30:16: note: resolves to this declaration
  static Movie createDrama(char mediaType, int stock, string director,
               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:60:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:61:7: error: variable 'stock' of type 'int' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      int stock = stoi(line);
      ^
          const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:61:11: error: invalid case style for variable 'stock' [readability-identifier-naming,-warnings-as-errors]
      int stock = stoi(line);
          ^~~~~
          Stock
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:61:19: error: 'stoi' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      int stock = stoi(line);
                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4108:3: note: resolves to this declaration
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:63:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:64:7: error: variable 'director' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      string director = line;
      ^
             const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:64:14: error: invalid case style for variable 'director' [readability-identifier-naming,-warnings-as-errors]
      string director = line;
             ^~~~~~~~
             Director
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:66:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ',');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:67:7: error: variable 'title' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      string title = line;
      ^
             const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:67:14: error: invalid case style for variable 'title' [readability-identifier-naming,-warnings-as-errors]
      string title = line;
             ^~~~~
             Title
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:69:7: error: variable 'actorStream' of type 'stringstream' (aka 'basic_stringstream<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      stringstream actorStream;
      ^
                   const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:69:20: error: invalid case style for variable 'actorStream' [readability-identifier-naming,-warnings-as-errors]
      stringstream actorStream;
                   ^~~~~~~~~~~
                   ActorStream
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:70:7: error: variable 'actorPart' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      string actorPart;
      ^
             const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:70:14: error: invalid case style for variable 'actorPart' [readability-identifier-naming,-warnings-as-errors]
      string actorPart;
             ^~~~~~~~~
             ActorPart
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:71:14: error: invalid case style for variable 'actor' [readability-identifier-naming,-warnings-as-errors]
      string actor;
             ^~~~~
             Actor
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:72:11: error: variable 'month' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int month;
          ^
                = 0
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:72:11: error: invalid case style for variable 'month' [readability-identifier-naming,-warnings-as-errors]
      int month;
          ^~~~~
          Month
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:73:11: error: variable 'year' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
      int year;
          ^
               = 0
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:73:11: error: invalid case style for variable 'year' [readability-identifier-naming,-warnings-as-errors]
      int year;
          ^~~~
          Year
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:74:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ' ');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:75:13: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      actor = line;
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:800:7: note: resolves to this declaration
      operator=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:76:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ' ');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:77:13: error: 'operator+=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      actor += " " + line;
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:1354:7: note: resolves to this declaration
      operator+=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:77:20: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      actor += " " + line;
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3559:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:78:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ' ');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:79:15: error: 'stoi' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      month = stoi(line);
              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4108:3: note: resolves to this declaration
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:80:7: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      getline(ss, line, ' ');
      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:81:14: error: 'stoi' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      year = stoi(line);
             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4108:3: note: resolves to this declaration
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:82:7: error: variable 'movie' of type 'Movie' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      Movie movie = MovieFactory::createClassics(MEDIA_TYPE, stock, director,
      ^
            const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:82:13: error: invalid case style for variable 'movie' [readability-identifier-naming,-warnings-as-errors]
      Movie movie = MovieFactory::createClassics(MEDIA_TYPE, stock, director,
            ^~~~~
            Movie
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:82:21: error: 'createClassics' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      Movie movie = MovieFactory::createClassics(MEDIA_TYPE, stock, director,
                    ^
/home/NETID/amyv16/ass4-movie-starter/movieFactory.h:36:16: note: resolves to this declaration
  static Movie createClassics(char mediaType, int stock, string director,
               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:86:12: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid movie type encountered: " << type << endl;
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:86:50: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid movie type encountered: " << type << endl;
                                                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:570:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:86:58: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid movie type encountered: " << type << endl;
                                                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:86:61: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid movie type encountered: " << type << endl;
                                                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:92:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void MovieStore::readCustomer(string filename) {
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:92:38: error: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
void MovieStore::readCustomer(string filename) {
                                     ^
                              const &
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:93:12: error: invalid case style for variable 'file' [readability-identifier-naming,-warnings-as-errors]
  ifstream file(filename);
           ^~~~
           File
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:94:3: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
  string ID, lastName, firstName;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:93:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  ifstream file(filename);
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:94:10: error: variable name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  string ID, lastName, firstName;
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:94:14: error: invalid case style for variable 'lastName' [readability-identifier-naming,-warnings-as-errors]
  string ID, lastName, firstName;
             ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:94:24: error: invalid case style for variable 'firstName' [readability-identifier-naming,-warnings-as-errors]
  string ID, lastName, firstName;
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:97:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (file >> ID >> firstName >> lastName) {
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:97:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'file' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (file >> ID >> firstName >> lastName) {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:97:15: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  while (file >> ID >> firstName >> lastName) {
              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:97:21: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  while (file >> ID >> firstName >> lastName) {
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:97:34: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  while (file >> ID >> firstName >> lastName) {
                                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:99:7: error: variable 'id' of type 'int' can be declared 'const' [misc-const-correctness,-warnings-as-errors]
      int id = stoi(ID);
      ^
          const 
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:99:11: error: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
      int id = stoi(ID);
          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:99:11: error: invalid case style for variable 'id' [readability-identifier-naming,-warnings-as-errors]
      int id = stoi(ID);
          ^~
          Id
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:99:16: error: 'stoi' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      int id = stoi(ID);
               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4108:3: note: resolves to this declaration
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:101:38: error: invalid case style for variable 'e' [readability-identifier-naming,-warnings-as-errors]
    } catch (const invalid_argument &e) {
                                     ^
                                     E
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:102:12: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Not a valid argument:" << e.what() << endl;
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:102:39: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Not a valid argument:" << e.what() << endl;
                                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:102:51: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Not a valid argument:" << e.what() << endl;
                                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:102:54: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Not a valid argument:" << e.what() << endl;
                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:104:34: error: invalid case style for variable 'e' [readability-identifier-naming,-warnings-as-errors]
    } catch (const out_of_range &e) {
                                 ^
                                 E
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:105:12: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Out of range: " << e.what() << endl;
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:105:32: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Out of range: " << e.what() << endl;
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:105:44: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Out of range: " << e.what() << endl;
                                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:105:47: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cerr << "Out of range: " << e.what() << endl;
                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:112:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void MovieStore::readCommand(string filename) {
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:112:18: error: function 'readCommand' has cognitive complexity of 94 (threshold 25) [readability-function-cognitive-complexity,-warnings-as-errors]
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:119:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  while (getline(file, line)) {
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:125:5: note: +2, including nesting penalty of 1, nesting level increased to 2
    if (commandType == "B" || commandType == "R") {
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:125:28: note: +1
    if (commandType == "B" || commandType == "R") {
                           ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:127:7: note: +3, including nesting penalty of 2, nesting level increased to 3
      if (customerManager->isValid(customerID) && mediaType == "D") {
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:127:48: note: +1
      if (customerManager->isValid(customerID) && mediaType == "D") {
                                               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:128:9: note: +4, including nesting penalty of 3, nesting level increased to 4
        if (movieType == "F") {
        ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:132:11: note: +5, including nesting penalty of 4, nesting level increased to 5
          if (inventory->FindMovie(movieType, title)) {
          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:133:13: note: +6, including nesting penalty of 5, nesting level increased to 6
            if (commandType == "B") {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:135:15: note: +7, including nesting penalty of 6, nesting level increased to 7
              if (t.getID() != -1) {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:137:17: note: +1, nesting level increased to 7
              } else {
                ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:140:15: note: +1, nesting level increased to 6
            } else {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:142:15: note: +7, including nesting penalty of 6, nesting level increased to 7
              if (t.getID() != -1) {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:144:17: note: +1, nesting level increased to 7
              } else {
                ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:149:16: note: +1, nesting level increased to 4
        } else if (movieType == "D") {
               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:153:11: note: +5, including nesting penalty of 4, nesting level increased to 5
          if (inventory->FindMovie(movieType, title)) {
          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:154:13: note: +6, including nesting penalty of 5, nesting level increased to 6
            if (commandType == "B") {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:156:15: note: +7, including nesting penalty of 6, nesting level increased to 7
              if (t.getID() != -1) {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:158:17: note: +1, nesting level increased to 7
              } else {
                ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:161:15: note: +1, nesting level increased to 6
            } else {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:163:15: note: +7, including nesting penalty of 6, nesting level increased to 7
              if (t.getID() != -1) {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:165:17: note: +1, nesting level increased to 7
              } else {
                ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:170:16: note: +1, nesting level increased to 4
        } else if (movieType == "C") {
               ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:175:11: note: +5, including nesting penalty of 4, nesting level increased to 5
          if (commandType == "B") {
          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:177:13: note: +6, including nesting penalty of 5, nesting level increased to 6
            if (t.getID() != -1) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:179:15: note: +1, nesting level increased to 6
            } else {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:182:13: note: +1, nesting level increased to 5
          } else {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:184:13: note: +6, including nesting penalty of 5, nesting level increased to 6
            if (t.getID() != -1) {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:186:15: note: +1, nesting level increased to 6
            } else {
              ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:190:11: note: +1, nesting level increased to 4
        } else {
          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:197:10: note: +1, nesting level increased to 2
    else if (commandType == "I") {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:202:10: note: +1, nesting level increased to 2
    else if (commandType == "H") {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:207:7: note: +1, nesting level increased to 2
    } else {
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:112:37: error: the parameter 'filename' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
void MovieStore::readCommand(string filename) {
                                    ^
                             const &
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:113:12: error: invalid case style for variable 'file' [readability-identifier-naming,-warnings-as-errors]
  ifstream file(filename);
           ^~~~
           File
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:114:3: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
  string line, commandType, movieType, mediaType;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:114:10: error: invalid case style for variable 'line' [readability-identifier-naming,-warnings-as-errors]
  string line, commandType, movieType, mediaType;
         ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:114:16: error: invalid case style for variable 'commandType' [readability-identifier-naming,-warnings-as-errors]
  string line, commandType, movieType, mediaType;
               ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:114:29: error: invalid case style for variable 'movieType' [readability-identifier-naming,-warnings-as-errors]
  string line, commandType, movieType, mediaType;
                            ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:114:40: error: invalid case style for variable 'mediaType' [readability-identifier-naming,-warnings-as-errors]
  string line, commandType, movieType, mediaType;
                                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:3: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
  int customerID, year, month;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:7: error: variable 'customerID' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
  int customerID, year, month;
      ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:7: error: invalid case style for variable 'customerID' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:19: error: variable 'year' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
  int customerID, year, month;
                  ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:19: error: invalid case style for variable 'year' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:25: error: variable 'month' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
  int customerID, year, month;
                        ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:115:25: error: invalid case style for variable 'month' [readability-identifier-naming,-warnings-as-errors]
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:116:3: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
  string title, actor, director;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:113:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  ifstream file(filename);
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:116:10: error: invalid case style for variable 'title' [readability-identifier-naming,-warnings-as-errors]
  string title, actor, director;
         ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:116:17: error: invalid case style for variable 'actor' [readability-identifier-naming,-warnings-as-errors]
  string title, actor, director;
                ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:116:24: error: invalid case style for variable 'director' [readability-identifier-naming,-warnings-as-errors]
  string title, actor, director;
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:119:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (getline(file, line)) {
  ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:119:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'file' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (getline(file, line)) {
         ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:119:10: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4060:5: note: resolves to this declaration
    getline(basic_istream<_CharT, _Traits>& __is,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:120:18: error: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    stringstream ss(line);
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:120:18: error: invalid case style for variable 'ss' [readability-identifier-naming,-warnings-as-errors]
    stringstream ss(line);
                 ^~
                 Ss
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:121:8: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    ss >> commandType;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:125:21: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    if (commandType == "B" || commandType == "R") {
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:125:43: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    if (commandType == "B" || commandType == "R") {
                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:126:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> customerID >> mediaType >> movieType;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:126:24: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> customerID >> mediaType >> movieType;
                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:126:37: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> customerID >> mediaType >> movieType;
                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:127:61: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      if (customerManager->isValid(customerID) && mediaType == "D") {
                                                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:128:23: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        if (movieType == "F") {
                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:129:11: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          getline(ss, title, ',');
          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:130:14: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          ss >> year;
             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:133:29: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
            if (commandType == "B") {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:134:27: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
              Transaction t = inventory->Borrow(movieType, title, customerID);
                          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:134:27: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
              Transaction t = inventory->Borrow(movieType, title, customerID);
                          ^
                          T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:138:22: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:138:69: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:138:72: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:141:27: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
              Transaction t = inventory->Return(movieType, title, customerID);
                          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:141:27: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
              Transaction t = inventory->Return(movieType, title, customerID);
                          ^
                          T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:145:22: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:145:69: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:145:72: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:149:30: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        } else if (movieType == "D") {
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:150:11: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          getline(ss, director, ',');
          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:151:11: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          getline(ss, title);
          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4060:5: note: resolves to this declaration
    getline(basic_istream<_CharT, _Traits>& __is,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:154:29: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
            if (commandType == "B") {
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:155:27: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
              Transaction t = inventory->Borrow(movieType, title, customerID);
                          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:155:27: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
              Transaction t = inventory->Borrow(movieType, title, customerID);
                          ^
                          T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:159:22: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:159:69: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:159:72: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:162:27: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
              Transaction t = inventory->Return(movieType, title, customerID);
                          ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:162:27: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
              Transaction t = inventory->Return(movieType, title, customerID);
                          ^
                          T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:166:22: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:166:69: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:166:72: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                cout << "Movie does not exist, or is out of stock!" << endl;
                                                                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:170:30: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        } else if (movieType == "C") {
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:171:14: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          ss >> month >> year >> actor;
             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:171:23: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          ss >> month >> year >> actor;
                      ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:171:31: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          ss >> month >> year >> actor;
                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4007:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:173:11: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          getline(ss, line, ' ');
          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4082:5: note: resolves to this declaration
    getline(basic_istream<char>& __in, basic_string<char>& __str,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:174:17: error: 'operator+=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          actor += " " + line;
                ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:1354:7: note: resolves to this declaration
      operator+=(const basic_string& __str)
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:174:24: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          actor += " " + line;
                       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3559:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:175:27: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          if (commandType == "B") {
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:176:25: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
            Transaction t = inventory->BorrowClassics(actor, customerID);
                        ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:176:25: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
            Transaction t = inventory->BorrowClassics(actor, customerID);
                        ^
                        T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:180:20: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:180:67: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                                                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:180:70: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:183:25: error: variable name 't' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
            Transaction t = inventory->ReturnClassics(actor, customerID);
                        ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:183:25: error: invalid case style for variable 't' [readability-identifier-naming,-warnings-as-errors]
            Transaction t = inventory->ReturnClassics(actor, customerID);
                        ^
                        T
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:187:20: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:187:67: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                                                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:187:70: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
              cout << "Movie does not exist, or is out of stock!" << endl;
                                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:191:16: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          cout << "customer ID not valid: " << customerID << endl;
               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:191:45: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          cout << "customer ID not valid: " << customerID << endl;
                                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
      operator<<(int __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:191:59: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          cout << "customer ID not valid: " << customerID << endl;
                                                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:191:62: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          cout << "customer ID not valid: " << customerID << endl;
                                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:197:26: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    else if (commandType == "I") {
                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:202:26: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    else if (commandType == "H") {
                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3715:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:203:10: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss >> customerID;
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/istream:181:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:205:12: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << transactionManager->printTransaction(customerID);
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:208:12: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid command encountered: " << commandType << endl;
           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:208:47: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid command encountered: " << commandType << endl;
                                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:208:62: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid command encountered: " << commandType << endl;
                                                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:208:65: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      cout << "Invalid command encountered: " << commandType << endl;
                                                                ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:215:13: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
MovieStore::~MovieStore() {
            ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:22:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/movie_store.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:42:8: error: function 'MovieStore::readCommand' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name,-warnings-as-errors]
  void readCommand(string filname);
       ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp:112:18: note: the definition seen here
void MovieStore::readCommand(string filename) {
                 ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:42:8: note: differing parameters are named here: ('filname'), in definition: ('filename')
  void readCommand(string filname);
       ^                  ~~~~~~~
                          filename
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:50:8: error: invalid case style for private method 'Borrow' [readability-identifier-naming,-warnings-as-errors]
  bool Borrow();
       ^~~~~~
       borrow
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:53:8: error: invalid case style for private method 'Return'; cannot be fixed because 'return' would conflict with a keyword [readability-identifier-naming,-warnings-as-errors]
  bool Return();
       ^
/home/NETID/amyv16/ass4-movie-starter/movie_store.h:56:8: error: invalid case style for private method 'History' [readability-identifier-naming,-warnings-as-errors]
  bool History();
       ^~~~~~~
       history
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:8:1: error: #includes are not sorted properly [llvm-include-order,-warnings-as-errors]
#include <iostream>
^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:8:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:9:1: error: system include map not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:10:1: error: system include sstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <sstream>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:11:1: error: system include fstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <fstream>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:12:1: error: system include cassert not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <cassert>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:14:17: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
using namespace std;
                ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:16:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void testStore1() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:22:3: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
  ifstream fs(cfile);
  ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:17:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore1" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:17:30: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore1" << endl;
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:17:33: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore1" << endl;
                                ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:20:3: error: variable 'cfile' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
  string cfile = "testcommands-1.txt";
  ^
         const 
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:20:10: error: invalid case style for variable 'cfile' [readability-identifier-naming,-warnings-as-errors]
  string cfile = "testcommands-1.txt";
         ^~~~~
         Cfile
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:21:16: error: invalid case style for variable 'out' [readability-identifier-naming,-warnings-as-errors]
  stringstream out;
               ^~~
               Out
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:22:12: error: variable name 'fs' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  ifstream fs(cfile);
           ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:22:12: error: invalid case style for variable 'fs' [readability-identifier-naming,-warnings-as-errors]
  ifstream fs(cfile);
           ^~
           Fs
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:24:8: error: variable 'commandType' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
  char commandType;
       ^
                   = 0
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:24:8: error: invalid case style for variable 'commandType' [readability-identifier-naming,-warnings-as-errors]
  char commandType;
       ^~~~~~~~~~~
       CommandType
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:25:10: error: invalid case style for variable 'discard' [readability-identifier-naming,-warnings-as-errors]
  string discard;
         ^~~~~~~
         Discard
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:26:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (fs >> commandType) {
  ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:26:10: error: backward branch (while loop) is ID-dependent due to variable reference to 'fs' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
  while (fs >> commandType) {
         ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:26:13: error: 'operator>><char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  while (fs >> commandType) {
            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/istream.tcc:975:5: note: resolves to this declaration
    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:27:9: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    out << commandType;
        ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:570:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, char __c)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:28:5: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    getline(fs, discard);
    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4060:5: note: resolves to this declaration
    getline(basic_istream<_CharT, _Traits>& __is,
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:31:3: error: variable 'result' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness,-warnings-as-errors]
  string result = "IHHBRIBBIH";
  ^
         const 
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:31:10: error: invalid case style for variable 'result' [readability-identifier-naming,-warnings-as-errors]
  string result = "IHHBRIBBIH";
         ^~~~~~
         Result
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:32:20: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  assert(out.str() == result);
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:3698:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:33:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore1" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:33:28: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore1" << endl;
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:33:31: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore1" << endl;
                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:36:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void testStore2() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:37:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore2" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:37:30: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore2" << endl;
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:37:33: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStore2" << endl;
                                ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:38:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore2" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:38:28: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore2" << endl;
                           ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:38:31: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStore2" << endl;
                              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:41:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void testStoreFinal() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:42:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:42:51: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
                                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:42:54: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:43:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStoreFinal" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:43:34: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStoreFinal" << endl;
                                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:43:37: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "Start testStoreFinal" << endl;
                                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:44:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStoreFinal" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:44:32: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStoreFinal" << endl;
                               ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:44:35: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "End testStoreFinal" << endl;
                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:45:8: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:45:51: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
                                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:45:54: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  cout << "=====================================" << endl;
                                                     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:48:6: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void testAll() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:49:3: error: 'testStore1' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  testStore1();
  ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:16:6: note: resolves to this declaration
void testStore1() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:50:3: error: 'testStore2' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  testStore2();
  ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:36:6: note: resolves to this declaration
void testStore2() {
     ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:51:3: error: 'testStoreFinal' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  testStoreFinal();
  ^
/home/NETID/amyv16/ass4-movie-starter/store_test.cpp:41:6: note: resolves to this declaration
void testStoreFinal() {
     ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:3:1: error: system include sstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <sstream>
^~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:14: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction::Transaction(std::string action, int ID, std::string movieType,
             ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:26: error: pass by value and use std::move [modernize-pass-by-value,-warnings-as-errors]
Transaction::Transaction(std::string action, int ID, std::string movieType,
                         ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:50: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
Transaction::Transaction(std::string action, int ID, std::string movieType,
                                                 ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:54: error: 2 adjacent parameters of 'Transaction' of similar type ('std::string') are easily swapped by mistake [bugprone-easily-swappable-parameters,-warnings-as-errors]
Transaction::Transaction(std::string action, int ID, std::string movieType,
                                                     ^~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:66: note: the first parameter in the range is 'movieType'
Transaction::Transaction(std::string action, int ID, std::string movieType,
                                                                 ^~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:6:33: note: the last parameter in the range is 'info'
                         string info)
                                ^~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:5:54: error: pass by value and use std::move [modernize-pass-by-value,-warnings-as-errors]
Transaction::Transaction(std::string action, int ID, std::string movieType,
                                                     ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:6:26: error: pass by value and use std::move [modernize-pass-by-value,-warnings-as-errors]
                         string info)
                         ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:7:14: error: parameter 'action' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    : action(action), CustomerID(ID), type(movieType), movieInfo(info){};
             ^
             std::move( )
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:7:44: error: parameter 'movieType' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    : action(action), CustomerID(ID), type(movieType), movieInfo(info){};
                                           ^
                                           std::move( )
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:7:66: error: parameter 'info' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param,-warnings-as-errors]
    : action(action), CustomerID(ID), type(movieType), movieInfo(info){};
                                                                 ^
                                                                 std::move( )
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:7:73: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
    : action(action), CustomerID(ID), type(movieType), movieInfo(info){};
                                                                        ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:10:14: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Transaction::Transaction() {
             ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:11:3: error: 'action' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  action = "";
  ^~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:11:10: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  action = "";
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:811:7: note: resolves to this declaration
      operator=(const _CharT* __s)
      ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:12:3: error: 'CustomerID' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  CustomerID = -1;
  ^~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:13:3: error: 'type' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer,-warnings-as-errors]
  type = "";
  ^~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:13:8: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  type = "";
       ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:811:7: note: resolves to this declaration
      operator=(const _CharT* __s)
      ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:16:26: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
std::string Transaction::Output() {
                         ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:17:21: error: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  std::stringstream ss;
                    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:17:21: error: invalid case style for variable 'ss' [readability-identifier-naming,-warnings-as-errors]
  std::stringstream ss;
                    ^~
                    Ss
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:19:6: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  ss << "Action: " << action << ", CustomerID: " << CustomerID
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:19:20: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  ss << "Action: " << action << ", CustomerID: " << CustomerID
                   ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:19:30: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  ss << "Action: " << action << ", CustomerID: " << CustomerID
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:19:50: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  ss << "Action: " << action << ", CustomerID: " << CustomerID
                                                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:191:7: note: resolves to this declaration
      operator<<(int __n);
      ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:20:6: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
     << ", Movie Type: " << type << ", " << movieInfo;
     ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:20:26: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
     << ", Movie Type: " << type << ", " << movieInfo;
                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:20:34: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
     << ", Movie Type: " << type << ", " << movieInfo;
                                 ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:662:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:20:42: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
     << ", Movie Type: " << type << ", " << movieInfo;
                                         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:24:18: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int Transaction::getID() { return CustomerID; }
                 ^
/home/NETID/amyv16/ass4-movie-starter/transaction.cpp:24:18: error: method 'getID' can be made const [readability-make-member-function-const,-warnings-as-errors]
int Transaction::getID() { return CustomerID; }
                 ^
                         const
/home/NETID/amyv16/ass4-movie-starter/transaction.h:17:1: error: system include string not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/transaction.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction.h:26:34: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  Transaction(string action, int ID, string movieType, string info);
                                 ^
/home/NETID/amyv16/ass4-movie-starter/transaction.h:29:10: error: invalid case style for public method 'Output' [readability-identifier-naming,-warnings-as-errors]
  string Output();
         ^~~~~~
         output
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:2:1: error: #includes are not sorted properly [llvm-include-order,-warnings-as-errors]
#include <sstream>  // For std::stringstream
^
note: this fix will not be applied because it overlaps with another fix
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:2:1: error: system include sstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <sstream>  // For std::stringstream
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:3:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream> // For std::endl
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:6:26: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void TransactionManager::addTransaction(int ID, Transaction tran)
                         ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:6:45: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
void TransactionManager::addTransaction(int ID, Transaction tran)
                                            ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:6:61: error: the parameter 'tran' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
void TransactionManager::addTransaction(int ID, Transaction tran)
                                                            ^
                                                const      &
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:8:15: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  transactions[ID].push_back(tran);
              ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:11:33: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
std::string TransactionManager::printTransaction(int ID)
                                ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:11:54: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
std::string TransactionManager::printTransaction(int ID)
                                                     ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:13:21: error: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  std::stringstream ss;
                    ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:13:21: error: invalid case style for variable 'ss' [readability-identifier-naming,-warnings-as-errors]
  std::stringstream ss;
                    ^~
                    Ss
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:14:29: error: 'operator!=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
  if (transactions.find(ID) != transactions.end())
                            ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_tree.h:320:7: note: resolves to this declaration
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    for (auto &tran : transactions[ID])
    ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:16: error: invalid case style for variable 'tran' [readability-identifier-naming,-warnings-as-errors]
    for (auto &tran : transactions[ID])
               ^~~~
               Tran
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:21: error: 'operator!=<Transaction *, std::vector<Transaction>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto &tran : transactions[ID])
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1241:5: note: resolves to this declaration
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:21: error: 'operator*' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto &tran : transactions[ID])
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1099:7: note: resolves to this declaration
      operator*() const _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:21: error: 'operator++' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto &tran : transactions[ID])
                    ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_iterator.h:1109:7: note: resolves to this declaration
      operator++() _GLIBCXX_NOEXCEPT
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:16:35: error: 'operator[]' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    for (auto &tran : transactions[ID])
                                  ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_map.h:504:7: note: resolves to this declaration
      operator[](const key_type& __k)
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:18:10: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss << tran.Output() << std::endl; // std::endl to specify namespace
         ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/basic_string.h:4020:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:18:27: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss << tran.Output() << std::endl; // std::endl to specify namespace
                          ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:110:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp:18:30: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      ss << tran.Output() << std::endl; // std::endl to specify namespace
                             ^
/opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/ostream:735:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/NETID/amyv16/ass4-movie-starter/transaction_manager.h:17:1: error: system include map not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/transaction_manager.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <map>
^~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction_manager.h:18:1: error: system include vector not allowed, transitively included from /home/NETID/amyv16/ass4-movie-starter/transaction_manager.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/NETID/amyv16/ass4-movie-starter/transaction_manager.h:28:27: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  void addTransaction(int ID, Transaction tran);
                          ^
/home/NETID/amyv16/ass4-movie-starter/transaction_manager.h:31:31: error: parameter name 'ID' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  string printTransaction(int ID);
                              ^
Suppressed 580741 warnings (580741 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
811 warnings treated as errors
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./classics.cpp
Running clang-format on ./comedy.cpp
7,10c7,8
< bool Comedy::operator<(const Comedy &other) const
< {
<   if (this->title < other.title)
<   {
---
> bool Comedy::operator<(const Comedy &other) const {
>   if (this->title < other.title) {
12,14c10,11
<   }
<   else if ((this->title == other.title) && (this->releaseYear < other.releaseYear))
<   {
---
>   } else if ((this->title == other.title) &&
>              (this->releaseYear < other.releaseYear)) {
16,18c13
<   }
<   else
<   {
---
>   } else {
23,26c18,19
< bool Comedy::operator>(const Comedy &other) const
< {
<   if (this->title > other.title)
<   {
---
> bool Comedy::operator>(const Comedy &other) const {
>   if (this->title > other.title) {
28,30c21,22
<   }
<   else if ((this->title == other.title) && (this->releaseYear > other.releaseYear))
<   {
---
>   } else if ((this->title == other.title) &&
>              (this->releaseYear > other.releaseYear)) {
32,34c24
<   }
<   else
<   {
---
>   } else {
39,42c29,31
< bool Comedy::operator==(const Comedy &other) const
< {
<   if ((this->title == other.title) && (this->releaseYear == other.releaseYear))
<   {
---
> bool Comedy::operator==(const Comedy &other) const {
>   if ((this->title == other.title) &&
>       (this->releaseYear == other.releaseYear)) {
44,46c33
<   }
<   else
<   {
---
>   } else {
Running clang-format on ./customer.cpp
Running clang-format on ./customer_manager.cpp
0a1
> #include "customer_manager.h"
3d3
< #include "customer_manager.h"
7,11c7,8
< //Need to check if sufficiently detected, likely to cause memory leaks.
< CustomerManager::~CustomerManager() {
< 	delete CustomerList;
< }
< 
---
> // Need to check if sufficiently detected, likely to cause memory leaks.
> CustomerManager::~CustomerManager() { delete CustomerList; }
14,17c11,14
< 	if (!CustomerList->isExist(ID)) {
< 		return false;
< 	}
< 	return true;
---
>   if (!CustomerList->isExist(ID)) {
>     return false;
>   }
>   return true;
20,23c17,18
< //if not found, return nullptr;
< Customer CustomerManager::getCustomer(int ID) {
< 	return CustomerList->get(ID);
< }
---
> // if not found, return nullptr;
> Customer CustomerManager::getCustomer(int ID) { return CustomerList->get(ID); }
25c20
< //using hash function:
---
> // using hash function:
27,32c22,27
< 	//if (CustomerList->get(id).getID() != id) {
< 		Customer c = Customer(id, firstname, lastname);
< 		CustomerList->insert(id, c);
< 		return true;
< 	//}
< 	//return false;
---
>   // if (CustomerList->get(id).getID() != id) {
>   Customer c = Customer(id, firstname, lastname);
>   CustomerList->insert(id, c);
>   return true;
>   //}
>   // return false;
Running clang-format on ./drama.cpp
6,9c6,7
< bool Drama::operator<(const Drama &other) const
< {
<   if (this->director < other.director)
<   {
---
> bool Drama::operator<(const Drama &other) const {
>   if (this->director < other.director) {
11,13c9,10
<   }
<   else if ((this->director == other.director) && (this->title < other.title))
<   {
---
>   } else if ((this->director == other.director) &&
>              (this->title < other.title)) {
15,17c12
<   }
<   else
<   {
---
>   } else {
22,25c17,18
< bool Drama::operator>(const Drama &other) const
< {
<   if (this->director < other.director)
<   {
---
> bool Drama::operator>(const Drama &other) const {
>   if (this->director < other.director) {
27,29c20,21
<   }
<   else if ((this->director == other.director) && (this->title > other.title))
<   {
---
>   } else if ((this->director == other.director) &&
>              (this->title > other.title)) {
31,33c23
<   }
<   else
<   {
---
>   } else {
38,41c28,29
< bool Drama::operator==(const Drama &other) const
< {
<   if ((this->director == other.director) && (this->title > other.title))
<   {
---
> bool Drama::operator==(const Drama &other) const {
>   if ((this->director == other.director) && (this->title > other.title)) {
43,45c31
<   }
<   else
<   {
---
>   } else {
Running clang-format on ./dvd.cpp
4,8c4,7
< //constructor with stock provided
< DVD::DVD(int stock)
< {
< 	this->stock = stock;
< 	borrowed = 0;
---
> // constructor with stock provided
> DVD::DVD(int stock) {
>   this->stock = stock;
>   borrowed = 0;
11,19c10,16
< DVD::~DVD(){
< 	delete this;
< }
< 
< // add additional stock, might be proposed for other usage but keep it this way for now.
< bool DVD::addTostock(int stk)
< {
< 	stock += stk;
< 	return true;
---
> DVD::~DVD() { delete this; }
> 
> // add additional stock, might be proposed for other usage but keep it this way
> // for now.
> bool DVD::addTostock(int stk) {
>   stock += stk;
>   return true;
23,26c20
< bool DVD::isInStock() const
< {
< 	return (stock >= borrowed);
< }
---
> bool DVD::isInStock() const { return (stock >= borrowed); }
29,33c23,27
< bool DVD::checkOut()
< {
< 	if (borrowed >= stock) return false;
< 	borrowed++;
< 	return true;
---
> bool DVD::checkOut() {
>   if (borrowed >= stock)
>     return false;
>   borrowed++;
>   return true;
37,41c31,35
< bool DVD::returnMovie()
< {
< 	if(borrowed <= 0) return false;
< 	borrowed--;
< 	return true;
---
> bool DVD::returnMovie() {
>   if (borrowed <= 0)
>     return false;
>   borrowed--;
>   return true;
44,46c38
< int DVD::getBorrowed(){
< 	return borrowed;
< }
---
> int DVD::getBorrowed() { return borrowed; }
48,50c40
< int DVD::getRemained(){
< 	return stock - borrowed;
< }
\ No newline at end of file
---
> int DVD::getRemained() { return stock - borrowed; }
\ No newline at end of file
Running clang-format on ./hashtable.cpp
6,9c6,7
< HashTable::HashTable()
< {
<   for (size_t i = 0; i < TABLE_SIZE; i++)
<   {
---
> HashTable::HashTable() {
>   for (size_t i = 0; i < TABLE_SIZE; i++) {
16,19c14,15
< HashTable::~HashTable()
< {
<   for (int i = 0; i < TABLE_SIZE; ++i)
<   {
---
> HashTable::~HashTable() {
>   for (int i = 0; i < TABLE_SIZE; ++i) {
21,22c17
<     while (p != nullptr)
<     {
---
>     while (p != nullptr) {
35,36c30
< void HashTable::insert(int id, Customer customer)
< {
---
> void HashTable::insert(int id, Customer customer) {
39,40c33
<   if (table[index]->id == 0)
<   {
---
>   if (table[index]->id == 0) {
43,45c36
<   }
<   else
<   {
---
>   } else {
51,52c42
<     while (p->next != nullptr)
<     {
---
>     while (p->next != nullptr) {
60,61c50
< Customer HashTable::get(int key)
< {
---
> Customer HashTable::get(int key) {
64,67c53,54
<   while (p != nullptr)
<   {
<     if (p->id == key)
<     {
---
>   while (p != nullptr) {
>     if (p->id == key) {
76c63
< bool HashTable::isExist(int key){
---
> bool HashTable::isExist(int key) {
79,82c66,67
<   while (p != nullptr)
<   {
<     if (p->id == key)
<     {
---
>   while (p != nullptr) {
>     if (p->id == key) {
Running clang-format on ./inventory.cpp
Running clang-format on ./main.cpp
7,8c7
< void test1()
< {
---
> void test1() {
18,19c17
< int main()
< {
---
> int main() {
Running clang-format on ./media.cpp
6,7c6
< bool Media::addTostock(int stk)
< {
---
> bool Media::addTostock(int stk) {
11,16c10,11
< bool Media::isInStock() const
< {
<   return (stock != 0);
< }
< bool Media::checkOut()
< {
---
> bool Media::isInStock() const { return (stock != 0); }
> bool Media::checkOut() {
22,23c17
< bool Media::returnMovie()
< {
---
> bool Media::returnMovie() {
Running clang-format on ./movie.cpp
Running clang-format on ./movie_store.cpp
Running clang-format on ./store_test.cpp
7a8,9
> #include <cassert>
> #include <fstream>
11,12d12
< #include <fstream>
< #include <cassert>
Running clang-format on ./transaction.cpp
Running clang-format on ./transactionManager.cpp
2d1
< #include <sstream>  // For std::stringstream
3a3
> #include <sstream>  // For std::stringstream
5,7c5
< 
< void TransactionManager::addTransaction(int ID, Transaction tran)
< {
---
> void TransactionManager::addTransaction(int ID, Transaction tran) {
11,12c9
< std::string TransactionManager::printTransaction(int ID)
< {
---
> std::string TransactionManager::printTransaction(int ID) {
14,17c11,12
<   if (transactions.find(ID) != transactions.end())
<   {
<     for (auto &tran : transactions[ID])
<     {
---
>   if (transactions.find(ID) != transactions.end()) {
>     for (auto &tran : transactions[ID]) {
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==2505275== Memcheck, a memory error detector
==2505275== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2505275== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==2505275== Command: ./a.out
==2505275== Parent PID: 2505022
==2505275== 
==2505275== 
==2505275== HEAP SUMMARY:
==2505275==     in use at exit: 720 bytes in 30 blocks
==2505275==   total heap usage: 533 allocs, 503 frees, 131,592 bytes allocated
==2505275== 
==2505275== 192 bytes in 8 blocks are definitely lost in loss record 1 of 3
==2505275==    at 0x4C38913: operator new(unsigned long) (vg_replace_malloc.c:472)
==2505275==    by 0x40A4D3: MediaFactory::createDVD(int) (mediaFactory.h:27)
==2505275==    by 0x40A155: Movie::Movie(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (movie.cpp:25)
==2505275==    by 0x40DC3E: Comedy::Comedy(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (comedy.h:28)
==2505275==    by 0x40DE17: MovieFactory::createComedy(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (movieFactory.h:26)
==2505275==    by 0x40C0E1: MovieStore::readMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (movie_store.cpp:41)
==2505275==    by 0x409C9F: test1() (main.cpp:10)
==2505275==    by 0x409E59: main (main.cpp:20)
==2505275== 
==2505275== 192 bytes in 8 blocks are definitely lost in loss record 2 of 3
==2505275==    at 0x4C38913: operator new(unsigned long) (vg_replace_malloc.c:472)
==2505275==    by 0x40A4D3: MediaFactory::createDVD(int) (mediaFactory.h:27)
==2505275==    by 0x40A155: Movie::Movie(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (movie.cpp:25)
==2505275==    by 0x40DD04: Drama::Drama(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (drama.h:32)
==2505275==    by 0x40DF4F: MovieFactory::createDrama(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (movieFactory.h:32)
==2505275==    by 0x40C2DE: MovieStore::readMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (movie_store.cpp:55)
==2505275==    by 0x409C9F: test1() (main.cpp:10)
==2505275==    by 0x409E59: main (main.cpp:20)
==2505275== 
==2505275== 336 bytes in 14 blocks are definitely lost in loss record 3 of 3
==2505275==    at 0x4C38913: operator new(unsigned long) (vg_replace_malloc.c:472)
==2505275==    by 0x40A4D3: MediaFactory::createDVD(int) (mediaFactory.h:27)
==2505275==    by 0x40A155: Movie::Movie(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (movie.cpp:25)
==2505275==    by 0x40DB14: Classics::Classics(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) (classics.h:29)
==2505275==    by 0x40E0AE: MovieFactory::createClassics(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int) (movieFactory.h:39)
==2505275==    by 0x40C671: MovieStore::readMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (movie_store.cpp:83)
==2505275==    by 0x409C9F: test1() (main.cpp:10)
==2505275==    by 0x409E59: main (main.cpp:20)
==2505275== 
==2505275== LEAK SUMMARY:
==2505275==    definitely lost: 720 bytes in 30 blocks
==2505275==    indirectly lost: 0 bytes in 0 blocks
==2505275==      possibly lost: 0 bytes in 0 blocks
==2505275==    still reachable: 0 bytes in 0 blocks
==2505275==         suppressed: 0 bytes in 0 blocks
==2505275== 
==2505275== For lists of detected and suppressed errors, rerun with: -s
==2505275== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
customer.cpp:16:18: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
  return getID() + " " + getFirstName() + " " + getLastName();
         ~~~~~~~~^~~~~
customer.cpp:16:18: note: use array indexing to silence this warning
1 warning generated.
File '/home/NETID/amyv16/ass4-movie-starter/classics.cpp':
Name                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------
Classics::operator<(Classics const&) const         16      16   0.00%        14      14   0.00%        12      12   0.00%
Classics::operator>(Classics const&) const         16      16   0.00%        14      14   0.00%        12      12   0.00%
Classics::operator==(Classics const&) const         8       8   0.00%         9       9   0.00%         6       6   0.00%
-------------------------------------------------------------------------------------------------------------------------
TOTAL                                              40      40   0.00%        37      37   0.00%        30      30   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/comedy.cpp':
Name                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------
Comedy::operator<(Comedy const&) const              9       9   0.00%        14      14   0.00%         6       6   0.00%
Comedy::operator>(Comedy const&) const              9       9   0.00%        14      14   0.00%         6       6   0.00%
Comedy::operator==(Comedy const&) const             6       6   0.00%        10      10   0.00%         4       4   0.00%
-------------------------------------------------------------------------------------------------------------------------
TOTAL                                              24      24   0.00%        38      38   0.00%        16      16   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/customer.cpp':
Name                                                                                                                                                                                      Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Customer::Customer(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)         1       0 100.00%         1       0 100.00%         0       0   0.00%
Customer::getID() const                                                                                                                                                                         1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::getFirstName[abi:cxx11]() const                                                                                                                                                       1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::getLastName[abi:cxx11]() const                                                                                                                                                        1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::getAllInfo[abi:cxx11]() const                                                                                                                                                         1       1   0.00%         3       3   0.00%         0       0   0.00%
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                           5       4  20.00%         7       6  14.29%         0       0   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/customer_manager.cpp':
Name                                                                                                                                                                                                Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CustomerManager::CustomerManager()                                                                                                                                                                        1       0 100.00%         1       0 100.00%         0       0   0.00%
CustomerManager::~CustomerManager()                                                                                                                                                                       1       0 100.00%         3       0 100.00%         0       0   0.00%
CustomerManager::isValid(int)                                                                                                                                                                             4       1  75.00%         6       2  66.67%         2       1  50.00%
CustomerManager::getCustomer(int)                                                                                                                                                                         1       1   0.00%         3       3   0.00%         0       0   0.00%
CustomerManager::addCustomer(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)         1       0 100.00%         5       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                     8       2  75.00%        18       5  72.22%         2       1  50.00%

File '/home/NETID/amyv16/ass4-movie-starter/drama.cpp':
Name                                                                                                                                                                                                Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Drama::operator<(Drama const&) const                                                                                                                                                                      9       9   0.00%        14      14   0.00%         6       6   0.00%
Drama::operator>(Drama const&) const                                                                                                                                                                      9       9   0.00%        14      14   0.00%         6       6   0.00%
Drama::operator==(Drama const&) const                                                                                                                                                                     6       6   0.00%        10      10   0.00%         4       4   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                    24      24   0.00%        38      38   0.00%        16      16   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/dvd.cpp':
Name                                                                                                                                                                                                Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DVD::DVD(int)                                                                                                                                                                                             1       0 100.00%         4       0 100.00%         0       0   0.00%
DVD::~DVD()                                                                                                                                                                                               1       1   0.00%         3       3   0.00%         0       0   0.00%
DVD::addTostock(int)                                                                                                                                                                                      1       1   0.00%         4       4   0.00%         0       0   0.00%
DVD::isInStock() const                                                                                                                                                                                    1       1   0.00%         3       3   0.00%         0       0   0.00%
DVD::checkOut()                                                                                                                                                                                           4       4   0.00%         5       5   0.00%         2       2   0.00%
DVD::returnMovie()                                                                                                                                                                                        4       4   0.00%         5       5   0.00%         2       2   0.00%
DVD::getBorrowed()                                                                                                                                                                                        1       1   0.00%         3       3   0.00%         0       0   0.00%
DVD::getRemained()                                                                                                                                                                                        1       1   0.00%         3       3   0.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                    14      13   7.14%        30      26  13.33%         4       4   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/hashtable.cpp':
Name                                                                                                                                                                                                Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
HashTable::HashTable()                                                                                                                                                                                    4       0 100.00%         7       0 100.00%         2       0 100.00%
HashTable::~HashTable()                                                                                                                                                                                   6       0 100.00%        13       0 100.00%         4       0 100.00%
HashTable::hashFunction(int)                                                                                                                                                                              1       0 100.00%         1       0 100.00%         0       0   0.00%
HashTable::insert(int, Customer)                                                                                                                                                                          6       0 100.00%        20       0 100.00%         4       0 100.00%
HashTable::get(int)                                                                                                                                                                                       7       7   0.00%        14      14   0.00%         4       4   0.00%
HashTable::isExist(int)                                                                                                                                                                                   7       1  85.71%        13       1  92.31%         4       1  75.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                    31       8  74.19%        68      15  77.94%        18       5  72.22%

File '/home/NETID/amyv16/ass4-movie-starter/inventory.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Inventory::Inventory()                                                                                                                                                                                              1       0 100.00%         5       0 100.00%         0       0   0.00%
Inventory::AddMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Movie)                                                                                                   7       1  85.71%        11       1  90.91%         4       1  75.00%
Inventory::FindMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)                  5       1  80.00%         9       2  77.78%         4       1  75.00%
Inventory::Borrow(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int const&)         7       7   0.00%        15      15   0.00%         6       6   0.00%
Inventory::BorrowClassics(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int const&)                                                                                        7       1  85.71%        16       6  62.50%         6       2  66.67%
Inventory::Return(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int const&)         7       7   0.00%        15      15   0.00%         6       6   0.00%
Inventory::ReturnClassics(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int const&)                                                                                        7       7   0.00%        16      16   0.00%         6       6   0.00%
Inventory::addToStock(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Movie, int const&)                                                                                     7       7   0.00%        12      12   0.00%         6       6   0.00%
Inventory::PrintInventory() const                                                                                                                                                                                   1       1   0.00%         5       5   0.00%         0       0   0.00%
Inventory::PrintHelper(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const                                                                                                 2       2   0.00%         6       6   0.00%         2       2   0.00%
Inventory::sort(std::vector<Movie*, std::allocator<Movie*>>&)                                                                                                                                                      16      16   0.00%        17      17   0.00%        14      14   0.00%
Inventory::sortClassics(std::vector<Movie*, std::allocator<Movie*>>&)                                                                                                                                              16      16   0.00%        17      17   0.00%        14      14   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                              83      66  20.48%       144     112  22.22%        68      58  14.71%

File '/home/NETID/amyv16/ass4-movie-starter/main.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
test1()                                                                                                                                                                                                             1       0 100.00%         9       0 100.00%         0       0   0.00%
main                                                                                                                                                                                                                1       0 100.00%         4       0 100.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                               2       0 100.00%        13       0 100.00%         0       0   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/media.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Media::addTostock(int)                                                                                                                                                                                              1       1   0.00%         4       4   0.00%         0       0   0.00%
Media::isInStock() const                                                                                                                                                                                            1       1   0.00%         3       3   0.00%         0       0   0.00%
Media::checkOut()                                                                                                                                                                                                   4       4   0.00%         6       6   0.00%         2       2   0.00%
Media::returnMovie()                                                                                                                                                                                                1       1   0.00%         4       4   0.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                               7       7   0.00%        17      17   0.00%         2       2   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/movie.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
operator<<(std::ostream&, Movie const&)                                                                                                                                                                             1       1   0.00%         5       5   0.00%         0       0   0.00%
Movie::Movie(char, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int)                        6       1  83.33%        11       1  90.91%         4       2  50.00%
Movie::addTostock(char, int)                                                                                                                                                                                        3       3   0.00%         6       6   0.00%         2       2   0.00%
Movie::isInStock(char)                                                                                                                                                                                              6       6   0.00%         6       6   0.00%         4       4   0.00%
Movie::getTitle[abi:cxx11]()                                                                                                                                                                                        1       0 100.00%         1       0 100.00%         0       0   0.00%
Movie::getYear()                                                                                                                                                                                                    1       1   0.00%         1       1   0.00%         0       0   0.00%
Movie::checkOut(char)                                                                                                                                                                                               6       6   0.00%         7       7   0.00%         4       4   0.00%
Movie::returnMovie(char)                                                                                                                                                                                            4       4   0.00%         7       7   0.00%         2       2   0.00%
Movie::getActor[abi:cxx11]()                                                                                                                                                                                        1       0 100.00%         1       0 100.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                              29      22  24.14%        45      33  26.67%        16      14  12.50%

File '/home/NETID/amyv16/ass4-movie-starter/movie_store.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
MovieStore::MovieStore()                                                                                                                                                                                            1       0 100.00%         5       0 100.00%         0       0   0.00%
MovieStore::readMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)                                                                                                              12       0 100.00%        66       0 100.00%         8       0 100.00%
MovieStore::readCustomer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)                                                                                                            7       2  71.43%        17       6  64.71%         2       0 100.00%
MovieStore::readCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)                                                                                                            58      27  53.45%        89      45  49.44%        42      22  47.62%
MovieStore::~MovieStore()                                                                                                                                                                                           1       0 100.00%         5       0 100.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                              79      29  63.29%       182      51  71.98%        52      22  57.69%

File '/home/NETID/amyv16/ass4-movie-starter/store_test.cpp':
Name                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
testStore1()                                                                                                                                                                                                        3       3   0.00%        17      17   0.00%         2       2   0.00%
testStore2()                                                                                                                                                                                                        1       1   0.00%         4       4   0.00%         0       0   0.00%
testStoreFinal()                                                                                                                                                                                                    1       1   0.00%         6       6   0.00%         0       0   0.00%
testAll()                                                                                                                                                                                                           1       1   0.00%         5       5   0.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                               6       6   0.00%        32      32   0.00%         2       2   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/transaction.cpp':
Name                                                                                                                                                                                                                                                                            Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Transaction::Transaction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>)         1       1   0.00%         1       1   0.00%         0       0   0.00%
Transaction::Transaction()                                                                                                                                                                                                                                                            1       0 100.00%         5       0 100.00%         0       0   0.00%
Transaction::Output[abi:cxx11]()                                                                                                                                                                                                                                                      1       1   0.00%         6       6   0.00%         0       0   0.00%
Transaction::getID()                                                                                                                                                                                                                                                                  1       0 100.00%         1       0 100.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                 4       2  50.00%        13       7  46.15%         0       0   0.00%

File '/home/NETID/amyv16/ass4-movie-starter/transactionManager.cpp':
Name                                                                                                                                                                                                                                                                            Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TransactionManager::addTransaction(int, Transaction)                                                                                                                                                                                                                                  1       1   0.00%         3       3   0.00%         0       0   0.00%
TransactionManager::printTransaction[abi:cxx11](int)                                                                                                                                                                                                                                  4       2  50.00%        11       6  45.45%         4       3  25.00%
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                 5       3  40.00%        14       9  35.71%         4       3  25.00%
=====================================================
The lines below were never executed
=====================================================
    6|      0|bool Classics::operator<(const Classics &other) const {
    7|      0|  if (this->releaseYear < other.releaseYear) {
    8|      0|    return true;
    9|      0|  } else if ((this->releaseYear == other.releaseYear) &&
   10|      0|             (this->releaseMonth < other.releaseMonth)) {
   11|      0|    return true;
   12|      0|  } else if ((this->releaseYear == other.releaseYear) &&
   13|      0|             (this->releaseMonth == other.releaseMonth) &&
   14|      0|             (this->majorActor < other.majorActor)) {
   15|      0|    return true;
   16|      0|  } else {
   17|      0|    return false;
   18|      0|  }
   19|      0|}
   21|      0|bool Classics::operator>(const Classics &other) const {
   22|      0|  if (this->releaseYear > other.releaseYear) {
   23|      0|    return true;
   24|      0|  } else if ((this->releaseYear == other.releaseYear) &&
   25|      0|             (this->releaseMonth > other.releaseMonth)) {
   26|      0|    return true;
   27|      0|  } else if ((this->releaseYear == other.releaseYear) &&
   28|      0|             (this->releaseMonth == other.releaseMonth) &&
   29|      0|             (this->majorActor > other.majorActor)) {
   30|      0|    return true;
   31|      0|  } else {
   32|      0|    return false;
   33|      0|  }
   34|      0|}
   36|      0|bool Classics::operator==(const Classics &other) const {
   37|      0|  if ((this->releaseYear == other.releaseYear) &&
   38|      0|      (this->releaseMonth == other.releaseMonth) &&
   39|      0|      (this->majorActor > other.majorActor)) {
   40|      0|    return true;
   41|      0|  } else {
   42|      0|    return false;
   43|      0|  }
   44|      0|}
    8|      0|{
    9|      0|  if (this->title < other.title)
   10|      0|  {
   11|      0|    return true;
   12|      0|  }
   13|      0|  else if ((this->title == other.title) && (this->releaseYear < other.releaseYear))
   14|      0|  {
   15|      0|    return true;
   16|      0|  }
   17|      0|  else
   18|      0|  {
   19|      0|    return false;
   20|      0|  }
   21|      0|}
   24|      0|{
   25|      0|  if (this->title > other.title)
   26|      0|  {
   27|      0|    return true;
   28|      0|  }
   29|      0|  else if ((this->title == other.title) && (this->releaseYear > other.releaseYear))
   30|      0|  {
   31|      0|    return true;
   32|      0|  }
   33|      0|  else
   34|      0|  {
   35|      0|    return false;
   36|      0|  }
   37|      0|}
   40|      0|{
   41|      0|  if ((this->title == other.title) && (this->releaseYear == other.releaseYear))
   42|      0|  {
   43|      0|    return true;
   44|      0|  }
   45|      0|  else
   46|      0|  {
   47|      0|    return false;
   48|      0|  }
   49|      0|}
    8|      0|int Customer::getID() const { return ID; }
   10|      0|string Customer::getFirstName() const { return firstName; }
   12|      0|string Customer::getLastName() const { return lastName; }
   15|      0|string Customer::getAllInfo() const {
   16|      0|  return getID() + " " + getFirstName() + " " + getLastName();
   17|      0|}
   15|      0|		return false;
   16|      0|	}
   21|      0|Customer CustomerManager::getCustomer(int ID) {
   22|      0|	return CustomerList->get(ID);
   23|      0|}
    7|      0|{
    8|      0|  if (this->director < other.director)
    9|      0|  {
   10|      0|    return true;
   11|      0|  }
   12|      0|  else if ((this->director == other.director) && (this->title < other.title))
   13|      0|  {
   14|      0|    return true;
   15|      0|  }
   16|      0|  else
   17|      0|  {
   18|      0|    return false;
   19|      0|  }
   20|      0|}
   23|      0|{
   24|      0|  if (this->director < other.director)
   25|      0|  {
   26|      0|    return true;
   27|      0|  }
   28|      0|  else if ((this->director == other.director) && (this->title > other.title))
   29|      0|  {
   30|      0|    return true;
   31|      0|  }
   32|      0|  else
   33|      0|  {
   34|      0|    return false;
   35|      0|  }
   36|      0|}
   39|      0|{
   40|      0|  if ((this->director == other.director) && (this->title > other.title))
   41|      0|  {
   42|      0|    return true;
   43|      0|  }
   44|      0|  else
   45|      0|  {
   46|      0|    return false;
   47|      0|  }
   48|      0|}
   11|      0|DVD::~DVD(){
   12|      0|	delete this;
   13|      0|}
   17|      0|{
   18|      0|	stock += stk;
   19|      0|	return true;
   20|      0|}
   24|      0|{
   25|      0|	return (stock >= borrowed);
   26|      0|}
   30|      0|{
   31|      0|	if (borrowed >= stock) return false;
   32|      0|	borrowed++;
   33|      0|	return true;
   34|      0|}
   38|      0|{
   39|      0|	if(borrowed <= 0) return false;
   40|      0|	borrowed--;
   41|      0|	return true;
   42|      0|}
   44|      0|int DVD::getBorrowed(){
   45|      0|	return borrowed;
   46|      0|}
   48|      0|int DVD::getRemained(){
   49|      0|	return stock - borrowed;
   50|      0|}
   61|      0|{
   62|      0|  int index = hashFunction(key);
   63|      0|  CustomerProfile *p = table[index];
   64|      0|  while (p != nullptr)
   65|      0|  {
   66|      0|    if (p->id == key)
   67|      0|    {
   68|      0|      return p->customerLink;
   69|      0|    }
   70|      0|    p = p->next;
   71|      0|  }
   72|      0|  Customer nul;
   73|      0|  return nul;
   74|      0|}
   87|      0|  return false;
   30|      0|  return false;
   37|      0|      return true;
   38|      0|    }
   44|      0|                              const int &id) {
   46|      0|  if (inventory_.find(type) != inventory_.end()) {
   47|      0|    auto &inventory = inventory_.find(type)->second;
   49|      0|    for (auto temp : inventory) {
   50|      0|      if (temp.getTitle() == title) {
   51|      0|        temp.checkOut('D');
   52|      0|        string info = temp.getTitle() + ", " + to_string(temp.getYear());
   53|      0|        Transaction t = Transaction("B", id, type, info);
   54|      0|        return t;
   55|      0|      }
   56|      0|    }
   57|      0|  }
   58|      0|  Transaction t = Transaction();
   59|      0|  return t;
   60|      0|}
   70|      0|        temp.checkOut('D');
   71|      0|        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
   72|      0|                      to_string(temp.getYear());
   73|      0|        Transaction t = Transaction("B", id, "C", info);
   74|      0|        return t;
   75|      0|      }
   83|      0|                              const int &id) {
   85|      0|  if (inventory_.find(type) != inventory_.end()) {
   86|      0|    auto &inventory = inventory_.find(type)->second;
   89|      0|    for (auto temp : inventory) {
   90|      0|      if (temp.getTitle() == title) {
   91|      0|        temp.returnMovie('D');
   92|      0|        string info = temp.getTitle() + ", " + to_string(temp.getYear());
   93|      0|        Transaction t = Transaction("R", id, type, info);
   94|      0|        return t;
   95|      0|      }
   96|      0|    }
   97|      0|  }
   98|      0|  Transaction t = Transaction();
   99|      0|  return t;
  100|      0|}
  102|      0|Transaction Inventory::ReturnClassics(const std::string &actor, const int &id) {
  104|      0|  if (inventory_.find("C") != inventory_.end()) {
  105|      0|    auto &inventory = inventory_.find("C")->second;
  107|      0|    for (auto temp : inventory) {
  108|      0|      if (temp.getActor() == actor) {
  109|      0|        temp.returnMovie('D');
  110|      0|        string info = temp.getTitle() + ", " + temp.getActor() + ", " +
  111|      0|                      to_string(temp.getYear());
  112|      0|        Transaction t = Transaction("R", id, "C", info);
  113|      0|        return t;
  114|      0|      }
  115|      0|    }
  116|      0|  }
  117|      0|  Transaction t = Transaction();
  118|      0|  return t;
  119|      0|}
  122|      0|                           const int &stock) {
  124|      0|  if (inventory_.find(type) != inventory_.end()) {
  125|      0|    auto &inventory = inventory_.find(type)->second;
  126|      0|    for (Movie temp : inventory) {
  127|      0|      if (temp.getTitle() == movie.getTitle()) {
  128|      0|        temp.addTostock('D', stock);
  129|      0|        return true;
  130|      0|      }
  131|      0|    }
  132|      0|  }
  133|      0|  return false;
  134|      0|}
  136|      0|void Inventory::PrintInventory() const {
  137|      0|  PrintHelper("F");
  138|      0|  PrintHelper("D");
  139|      0|  PrintHelper("C");
  140|      0|}
  142|      0|void Inventory::PrintHelper(const std::string &type) const {
  143|      0|  auto &inventory = inventory_.find(type)->second;
  144|      0|  for (auto movie : inventory) {
  145|      0|    std::cout << movie << "\n";
  146|      0|  }
  147|      0|}
  149|      0|void Inventory::sort(std::vector<Movie *> &v) {
  150|      0|  if (v.empty())
  151|      0|    return;
  152|      0|  for (int i = 0; i < v.size() - 1; i++) {
  153|      0|    int index = i;
  154|      0|    for (int j = i; j < v.size(); j++) {
  156|      0|      if (v[j]->getTitle() < v[index]->getTitle() ||
  157|      0|          (v[j]->getTitle() == v[index]->getTitle() &&
  158|      0|           v[j]->getYear() < v[index]->getYear())) {
  159|      0|        index = j;
  160|      0|      }
  161|      0|    }
  162|      0|    auto temp = v[i];
  163|      0|    v[i] = v[index];
  164|      0|    v[index] = temp;
  165|      0|  }
  166|      0|}
  168|      0|void Inventory::sortClassics(std::vector<Movie *> &v) {
  169|      0|  if (v.empty())
  170|      0|    return;
  171|      0|  for (int i = 0; i < v.size() - 1; i++) {
  172|      0|    int index = i;
  174|      0|    for (int j = i; j < v.size(); j++) {
  175|      0|      if (v[j]->getYear() < v[index]->getYear() ||
  176|      0|          (v[j]->getTitle() < v[index]->getTitle() &&
  177|      0|           v[j]->getYear() == v[index]->getYear())) {
  178|      0|        index = j;
  179|      0|      }
  180|      0|    }
  181|      0|    auto temp = v[i];
  182|      0|    v[i] = v[index];
  183|      0|    v[index] = temp;
  184|      0|  }
  185|      0|}
    7|      0|{
    8|      0|  stock += stk;
    9|      0|  return true;
   10|      0|}
   12|      0|{
   13|      0|  return (stock != 0);
   14|      0|}
   16|      0|{
   17|      0|  if (stock == 0)
   18|      0|    return false;
   19|      0|  stock--;
   20|      0|  return true;
   21|      0|}
   23|      0|{
   24|      0|  stock++;
   25|      0|  return true;
   26|      0|}
   25|      0|  virtual ~Media() = default;
    7|      0|ostream &operator<<(ostream &out, const Movie &movie) {
    9|      0|  out << movie.title << " " << movie.director << " " << movie.releaseYear << " "
   10|      0|      << movie.allStock.begin()->second->getRemained();
   11|      0|  return out;
   12|      0|}
   22|      0|    allStock[mediaType]->addTostock(stock);
   30|      0|bool Movie::addTostock(char mediaType, int stock) {
   32|      0|  if (allStock.find(mediaType) != allStock.end()) {
   33|      0|    allStock[mediaType]->addTostock(stock);
   34|      0|  }
   35|      0|  return true;
   36|      0|}
   38|      0|bool Movie::isInStock(char mediaType) {
   39|      0|  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
   40|      0|    return true;
   41|      0|  }
   43|      0|  return false;
   44|      0|}
   48|      0|int Movie::getYear() { return this->releaseYear; }
   50|      0|bool Movie::checkOut(char mediaType) {
   52|      0|  if (allStock.count(mediaType) && allStock[mediaType]->isInStock()) {
   53|      0|    allStock[mediaType]->checkOut();
   54|      0|    return true;
   55|      0|  }
   57|      0|  return false;
   58|      0|}
   60|      0|bool Movie::returnMovie(char mediaType) {
   62|      0|  if (allStock.count(mediaType)) {
   63|      0|    allStock[mediaType]->returnMovie();
   64|      0|    return true;
   65|      0|  }
   67|      0|  return false;
   68|      0|}
  102|      0|      cerr << "Not a valid argument:" << e.what() << endl;
  103|      0|      continue;
  104|      0|    } catch (const out_of_range &e) {
  105|      0|      cerr << "Out of range: " << e.what() << endl;
  106|      0|      continue;
  107|      0|    }
  133|      0|            if (commandType == "B") {
  134|      0|              Transaction t = inventory->Borrow(movieType, title, customerID);
  135|      0|              if (t.getID() != -1) {
  136|      0|                transactionManager->addTransaction(customerID, t);
  137|      0|              } else {
  138|      0|                cout << "Movie does not exist, or is out of stock!" << endl;
  139|      0|              }
  140|      0|            } else {
  141|      0|              Transaction t = inventory->Return(movieType, title, customerID);
  142|      0|              if (t.getID() != -1) {
  143|      0|                transactionManager->addTransaction(customerID, t);
  144|      0|              } else {
  145|      0|                cout << "Movie does not exist, or is out of stock!" << endl;
  146|      0|              }
  147|      0|            }
  148|      0|          }
  154|      0|            if (commandType == "B") {
  155|      0|              Transaction t = inventory->Borrow(movieType, title, customerID);
  156|      0|              if (t.getID() != -1) {
  157|      0|                transactionManager->addTransaction(customerID, t);
  158|      0|              } else {
  159|      0|                cout << "Movie does not exist, or is out of stock!" << endl;
  160|      0|              }
  161|      0|            } else {
  162|      0|              Transaction t = inventory->Return(movieType, title, customerID);
  163|      0|              if (t.getID() != -1) {
  164|      0|                transactionManager->addTransaction(customerID, t);
  165|      0|              } else {
  166|      0|                cout << "Movie does not exist, or is out of stock!" << endl;
  167|      0|              }
  168|      0|            }
  169|      0|          }
  178|      0|              transactionManager->addTransaction(customerID, t);
  183|      0|            Transaction t = inventory->ReturnClassics(actor, customerID);
  184|      0|            if (t.getID() != -1) {
  185|      0|              transactionManager->addTransaction(customerID, t);
  186|      0|            } else {
  187|      0|              cout << "Movie does not exist, or is out of stock!" << endl;
  188|      0|            }
  189|      0|          }
  191|      0|          cout << "customer ID not valid: " << customerID << endl;
  192|      0|          ss.ignore();
  193|      0|        }
  199|      0|      inventory->PrintInventory();
  200|      0|    }
   16|      0|void testStore1() {
   17|      0|  cout << "Start testStore1" << endl;
   20|      0|  string cfile = "testcommands-1.txt";
   21|      0|  stringstream out;
   22|      0|  ifstream fs(cfile);
   23|      0|  assert(fs.is_open());
   24|      0|  char commandType;
   25|      0|  string discard;
   26|      0|  while (fs >> commandType) {
   27|      0|    out << commandType;
   28|      0|    getline(fs, discard);
   29|      0|  }
   30|      0|  fs.close();
   31|      0|  string result = "IHHBRIBBIH";
   32|      0|  assert(out.str() == result);
   33|      0|  cout << "End testStore1" << endl;
   34|      0|}
   36|      0|void testStore2() {
   37|      0|  cout << "Start testStore2" << endl;
   38|      0|  cout << "End testStore2" << endl;
   39|      0|}
   41|      0|void testStoreFinal() {
   42|      0|  cout << "=====================================" << endl;
   43|      0|  cout << "Start testStoreFinal" << endl;
   44|      0|  cout << "End testStoreFinal" << endl;
   45|      0|  cout << "=====================================" << endl;
   46|      0|}
   48|      0|void testAll() {
   49|      0|  testStore1();
   50|      0|  testStore2();
   51|      0|  testStoreFinal();
   52|      0|}
    7|      0|    : action(action), CustomerID(ID), type(movieType), movieInfo(info){};
   16|      0|std::string Transaction::Output() {
   17|      0|  std::stringstream ss;
   19|      0|  ss << "Action: " << action << ", CustomerID: " << CustomerID
   20|      0|     << ", Movie Type: " << type << ", " << movieInfo;
   21|      0|  return ss.str();
   22|      0|}
    7|      0|{
    8|      0|  transactions[ID].push_back(tran);
    9|      0|}
   15|      0|  {
   16|      0|    for (auto &tran : transactions[ID])
   17|      0|    {
   18|      0|      ss << tran.Output() << std::endl; // std::endl to specify namespace
   19|      0|    }
   20|      0|  }
Mon May 27 23:44:52 PDT 2024
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
